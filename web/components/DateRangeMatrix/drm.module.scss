@use "styles/vars" as v;
@use "styles/_panel" as panel;

.drmContainer {
  margin: 0 auto;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  gap: 0; // remove gap between TeamSelect container and page title
}

.pageTitle {
  // keep panel-title metrics for spacing/typography
  @include panel.panel-title($padding-y: v.$space-sm, $padding-x: v.$space-md);
  display: flex;
  align-items: center;
  gap: v.$space-sm;
  margin: 0;
  color: v.$text-primary;
  border-bottom-color: v.$border-accent;
  // restore team-color hard-line gradient background
  background: linear-gradient(
    180deg,
    var(--secondary-color) 0%,
    var(--secondary-color) 3%,
    var(--accent-color) 3%,
    var(--accent-color) 8%,
    var(--primary-color) 8%,
    var(--primary-color) 65%,
    var(--jersey-color) 65%,
    var(--jersey-color) 70%,
    var(--accent-color) 70%,
    var(--accent-color) 75%,
    var(--secondary-color) 75%,
    var(--secondary-color) 80%,
    var(--jersey-color) 80%,
    var(--jersey-color) 100%
  );
}

.teamLogo {
  width: 56px;
  height: 56px;
  margin-left: v.$space-sm;
  margin-right: v.$space-sm;
  z-index: 1;
  filter: drop-shadow(0 0 5px v.$border-accent);
}

.teamName {
  flex-grow: 1;
  z-index: 1;
  margin-left: v.$space-sm;
}

.teamLocation {
  color: v.$text-secondary;
}

.teamShortName {
  color: v.$text-primary;
}

// New two-column container spanning controls and content
.columnsContainer {
  width: 95%;
  margin: v.$space-md auto;
  display: grid;
  grid-template-columns: 3fr 2fr; // 60/40
  column-gap: v.$space-md;
  row-gap: v.$space-md;
  align-items: start;
  // Normalize control heights for buttons/selects/inputs within controls
  --control-h: 40px;
}

.leftColumn,
.rightColumn {
  display: flex;
  flex-direction: column;
  gap: v.$space-md;
}

.rightColumn {
  border-left: 1px solid v.$primary-color; // thin separator
  padding-left: v.$space-md;
}

.options1,
.options2,
.linePairGrid,
.dateRangeMatrixContainer {
  width: 100%;
  display: flex;
  flex-direction: column;
}

// Grid handles the column sizing; children fill 100%

// Stack on smaller screens
@media only screen and (max-width: v.$screen-medium-max) {
  .columnsContainer {
    grid-template-columns: 1fr;
  }
  .rightColumn {
    border-left: 0;
    padding-left: 0;
  }
}

// Controls width split and horizontal layout
.options1 {
  @include v.component-wrapper;
  padding: v.$space-sm;
  // Equal columns
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
  column-gap: v.$space-sm;
  align-items: stretch;
  min-height: 75px;

  // Ensure children shrink properly within columns
  > .timeFrameGroup,
  > .datePickerGroup,
  > .dropdownGroup {
    min-width: 0;
  }

  // Thin separator between columns
  > *:not(:first-child) {
    border-left: 1px solid v.$border-secondary;
    padding-left: v.$space-sm;
  }
}

.options2 {
  @include v.component-wrapper;
  padding: v.$space-sm;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  gap: v.$space-sm;
  flex-wrap: wrap;
  min-height: 82.5px;

  // Desired order: buttons (left), select (right)
  .buttonsContainer {
    order: 1;
  }
  .selectWrapper {
    order: 2;
  }
}

// Stack controls on smaller screens
@media only screen and (max-width: v.$screen-medium-max) {
  .options1,
  .options2 {
    flex: 0 0 100%;
    max-width: 100%;
    flex-direction: column;
    align-items: stretch;
  }
}

.dropdownGroup {
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: v.$space-xxs;
  justify-content: center;
}

.dropdownGroup,
.datePickerGroup {
  display: flex;
  align-items: center;
}

.datePickerGroup {
  overflow: visible; // allow popper to escape panel
  gap: v.$space-sm;
  flex: 1;
  justify-content: space-evenly;
}

// Ensure datepicker popper appears above surrounding content
.datePickerGroup .react-datepicker-popper {
  z-index: 10000;
}

.label {
  font-size: v.$font-size-sm;
  font-weight: 600;
  color: v.$text-secondary;
  margin-right: v.$space-sm;
  min-width: 70px;
  text-align: right;
}

.datePicker {
  display: flex;
  flex-direction: column;
  gap: v.$space-xxs;
  justify-content: center;
  align-items: center;
}
.datePicker .label {
  margin: 0;
  min-width: auto;
  text-align: left;
}

// Timeframe group mirrors datePicker vertical layout for label + control
.timeFrameGroup {
  display: flex;
  flex-direction: column;
  gap: v.$space-xxs;
  margin-left: v.$space-sm;
}
.timeFrameGroup .label {
  margin: 0;
  min-width: auto;
  text-align: left;
}

.customSelect {
  position: relative;
  display: inline-block;
  width: 100%;
  font-family: "Roboto Condensed", sans-serif;

  select {
    width: 100%;
    padding: 0 v.$space-md;
    height: var(--control-h);
    border: 1px solid v.$border-secondary;
    border-radius: v.$border-radius-md;
    background-color: v.$background-medium;
    color: v.$text-primary;
    appearance: none; /* Removes the default dropdown arrow */
    -webkit-appearance: none;
    -moz-appearance: none;
    cursor: pointer;
    font-family:
      "Roboto Condensed", sans-serif; /* Apply font to the select element */
  }

  &::after {
    content: "\25BC"; /* Custom arrow symbol */
    position: absolute;
    top: 50%;
    right: 12px;
    transform: translateY(-50%);
    pointer-events: none; /* Arrow doesn't block the dropdown */
    color: white;
    font-size: 12px;
  }

  select:focus {
    outline: none;
    border-color: #07aae2;
  }

  select option {
    background-color: #404040;
    color: white;
    padding: 10px;
    font-family: "Roboto Condensed", sans-serif; /* Apply font to options */
  }

  select option:hover {
    background-color: #07aae2;
    color: white;
  }
}

/* Override the day, day-name, and time-name styles */
.datePickerGroup {
  .react-datepicker__day-name,
  .react-datepicker__day,
  .react-datepicker__time-name {
    color: v.$text-primary; /* Change text color to site token */
    background-color: v.$background-medium; /* Change background color */
    border-radius: 5px; /* Add some border-radius */
    font-family: "Roboto Condensed", sans-serif; /* Use Roboto Condensed font */
    font-size: 14px; /* Adjust font size if needed */
  }

  /* Override selected day */
  .react-datepicker__day--selected,
  .react-datepicker__day--keyboard-selected {
    background-color: v.$primary-color; /* Selected day background color */
    color: v.$text-button; /* Selected day text color */
  }

  /* Override hover effect */
  .react-datepicker__day:hover {
    background-color: v.$secondary-color; /* Hover background color */
    color: v.$text-button; /* Hover text color */
  }

  /* Adjust the date picker input */
  .react-datepicker-wrapper input {
    width: 100%;
    padding: v.$space-sm v.$space-md;
    border: 1px solid v.$border-secondary;
    border-radius: v.$border-radius-md;
    background-color: v.$background-medium;
    color: v.$text-primary;
    font-family: v.$font-family-primary;
    font-size: v.$font-size-sm;
    cursor: pointer;

    &:focus {
      outline: none;
      border-color: v.$primary-color;
    }
  }
}

.datePickerInput {
  width: 100%;
  background-color: v.$background-medium;
  border: 1px solid v.$border-secondary;
  border-radius: v.$border-radius-md;
  padding: 0 v.$space-md;
  height: var(--control-h, 40px);
  line-height: calc(var(--control-h) - 2px);
  color: v.$text-primary;
  font-family: v.$font-family-primary;
}

.datePickers {
  display: flex;
  justify-content: space-between;
  margin-bottom: 1rem;
}

.selectWrapper {
  position: relative;
  font-size: v.$font-size-sm;
  font-weight: 600;
}

.buttonsContainer {
  display: flex;
  justify-content: space-between;
  gap: v.$space-md;
  margin-left: v.$space-sm;
}

.button {
  @include v.button-style;
  background-color: v.$background-medium;
  color: v.$text-secondary;
  border-color: v.$border-secondary;
  height: var(--control-h, 40px);
  padding: 0 v.$space-md;
  &:hover {
    color: v.$text-primary;
  }
  &.active {
    background-color: v.$primary-color;
    color: v.$text-button;
    border-color: v.$primary-color;
  }
}

.linePairGrid,
.dateRangeMatrixContainer {
  flex: 1 1 0;
  display: flex;
  flex-direction: column;
  width: 100%;
}

.pulsatingGridWrapper {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 10; /* Ensure it's on top of everything */
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.7); /* Optional: Add a background overlay */
}

.timeFrameToggle {
  display: flex;
  justify-content: flex-start;
  gap: 2px;
  margin: 0;
  background: v.$background-medium;
  border: 1px solid v.$border-secondary;
  border-radius: v.$radius-sm;
  padding: 2px;
}
.timeFrameToggle .button {
  background: transparent;
  border: 0;
  color: v.$text-secondary;
}
.timeFrameToggle .button.active {
  background: v.$primary-color;
  color: v.$text-button;
  border-radius: v.$radius-sm;
}
