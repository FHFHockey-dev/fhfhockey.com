/* styles/PlayerRatingsDisplay.module.scss */
@use "styles/vars" as v; // Assuming you have a vars file with colors, spacing, etc.
@use "sass:color";

// Main container for the entire ratings display
.ratingsRoot {
  display: flex; // Use flexbox to arrange the three main sections
  justify-content: space-between; // Distribute space between sections
  gap: v.$space-md; // Add some gap between the columns
  padding: v.$space-sm v.$space-md; // Padding around the whole element
  background-color: color.adjust(
    v.$background-dark,
    $lightness: -3%
  ); // Slightly darker background
  border-radius: v.$border-radius-sm;
  height: 100%; // Make it fill the container it's placed in
  box-sizing: border-box;
  overflow: hidden; // Prevent content overflow
}

// Styling for each main section (Offense, Overall, Defense)
.ratingSection {
  flex: 1; // Make each section take up equal width (THIS HANDLES EQUAL COLUMNS)
  display: flex;
  flex-direction: column; // Stack title above boxes
  min-width: 0; // Prevent flex items from overflowing
  background-color: v.$background-dark; // Background for the section column
  border: 1px solid v.$border-color-secondary; // Keep the section border
  border-radius: v.$border-radius-sm;
  overflow: hidden; // Hide overflow within the section
}

// Title for each section (Offense, Overall, Defense)
.ratingTitle {
  text-align: center;
  color: v.$text-color-primary;
  background-color: darkcolor.adjusten(
    v.$background-dark,
    $lightness: -5%
  ); // Header background
  padding: v.$space-xs v.$space-sm;
  margin: 0;
  font-size: v.$font-size-small;
  font-family: v.$font-family-primary;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1.5px;
  border-bottom: 1px solid v.$border-color-primary;
  flex-shrink: 0; // Prevent title from shrinking
}

// Container for the individual rating boxes within a section
.ratingsBoxes {
  display: flex;
  flex-direction: column; // Stack boxes vertically by default
  flex-grow: 1; // Allow this container to fill the remaining space
  padding: v.$space-sm;
  gap: v.$space-sm; // Space between boxes
  justify-content: space-evenly; // Distribute space evenly vertically
  min-height: 0; // Allow flex container to shrink properly if needed
}

// Styling for each individual rating box (e.g., AS, ES, PP)
.ratingBox {
  display: flex;
  flex-direction: column; // Stack label and value vertically
  justify-content: center; // Center content vertically
  align-items: center; // Center content horizontally
  border-radius: 8px;
  padding: v.$space-xs; // Adjust padding as needed
  width: 100%; // Fill the column width
  min-height: 30px;
  flex-basis: 0;
  flex-grow: 1;
  box-sizing: border-box;
  font-family: "Roboto Condensed", sans-serif;
  text-align: center;
  // Add a default transparent border that gets overridden,
  // ensuring consistent layout even if inline styles fail initially
  border: 2px solid transparent;
}

.ratingLabel {
  font-size: 0.8rem;
  color: WHITE; // Default label color
  font-weight: normal;
  line-height: 1.1;
  margin-bottom: 2px;
}

.ratingValue {
  font-size: 1.2rem;
  font-weight: bold;
  color: #e0e0e0; // Default value color (will be overridden)
  line-height: 1.2;
}

// Specific style for the final overall rating box
.finalRating {
  // Inherits .ratingBox styles, override specifics
  // flex-grow: 1.2; // *** REMOVED to prevent overflow in 4-box column ***

  .ratingLabel {
    color: rgba(255, 255, 255, 0.85);
  }
  .ratingValue {
    color: #ffffff; // Default final value color (will be overridden)
    font-size: 1.3rem;
    font-weight: bolder;
  }
}

// --- Loading / Error / Placeholder States ---
.loading,
.error,
.noPlayer,
.calculating,
.noData {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  min-height: 100px;
  color: #aaa;
  font-style: italic;
  padding: 15px;
  box-sizing: border-box;
  text-align: center;
}

.error {
  color: #ff6b6b;
}
