/* components/WiGO/PerGameStatsTable.module.scss */
@use "sass:color";
@use "styles/vars" as v;
@use "sass:math";

.perGameTableContainer {
  width: 100%;
  height: 100%;
  overflow: hidden;
  background-color: v.$background-medium;
  color: v.$text-color-primary;
  font-family: v.$font-family-primary;
  display: flex;
  flex-direction: column;
  box-sizing: border-box;

  // Add vertical scroll ONLY if the table content might exceed the container height
  overflow-y: auto;
  &::-webkit-scrollbar {
    width: 5px;
  }
  &::-webkit-scrollbar-thumb {
    background-color: v.$primary-color;
    border-radius: 2px;
  }
  &::-webkit-scrollbar-track {
    background-color: v.$background-medium;
  }
  scrollbar-width: thin;
  scrollbar-color: v.$primary-color v.$background-medium;
}

// Styles for the standard vertical table
table.verticalStatsTable {
  width: 100%;
  height: 100%;
  border-collapse: collapse;
  table-layout: fixed; // Helps with column widths

  th,
  td {
    padding: v.$space-xs * 0.8;
    text-align: center;
    font-size: v.$font-size-small * 0.8;
    border-bottom: 1px solid v.$border-color-secondary;
    white-space: nowrap;
  }

  thead th {
    // Column Headers (Metric, Per/GP, Per/82)
    background-color: v.$background-dark;
    color: v.$text-color-secondary;
    font-weight: 600;
    position: sticky; // Make header row sticky
    top: 0;
    z-index: 1;
    border-bottom: 2px solid v.$primary-color; // Stronger border below headers
    border-right: 1px solid v.$border-color-secondary;
    &:last-child {
      border-right: none; // Remove border from last header
    }
  }

  thead th.metricHeader {
    // First header cell ("Metric")
    text-align: left;
    padding-left: v.$space-xs;
    width: 30%;
  }

  thead th.valueHeader {
    // Headers for values ("Per/GP", "Per/82")
    width: 35%;
  }

  tbody tr {
    transition: background-color v.$transition-duration v.$transition-easing;
    &:nth-child(even) {
      background-color: v.$background-light;
    }
    &:nth-child(odd) {
      background-color: v.$background-dark;
    }
    &:hover {
      background-color: color.scale(v.$primary-color, $alpha: -70%);
    }
    &:last-child {
      th,
      td {
        border-bottom: none;
        padding-bottom: v.$space-xs; // Adjust padding for last row
      }
    }
  }

  tbody th.metricCell {
    // First cell in each data row
    text-align: left;
    padding-left: v.$space-sm;
    font-weight: 600;
    color: v.$text-color-secondary;
    border-right: 1px solid v.$border-color-secondary;
  }

  tbody td.valueCell {
    // Data cells (the numbers)
    color: v.$text-color-primary;
    font-family: "roboto-condensed" sans-serif;
    border-right: 1px solid v.$border-color-secondary;
    &:last-child {
      border-right: none; // Remove border from last cell in row
    }
  }
}

// Keep message styles
.loadingMessage,
.errorMessage,
.noDataMessage,
.noPlayerMessage {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  width: 100%;
  flex-grow: 1; // Allow messages to take space if table isn't shown
  min-height: 50px;
  font-size: v.$font-size-small;
  padding: v.$space-md;
  color: v.$text-color-secondary;
}
.errorMessage {
  color: #ff6b6b;
}
.noDataMessage {
  color: #aaa;
}
.noPlayerMessage {
  color: #aaa;
}
