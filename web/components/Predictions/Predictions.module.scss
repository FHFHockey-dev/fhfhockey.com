@use "sass:color";
@use "styles/vars" as v;
@use "styles/panel" as p;

// ============================================================================
// Predictions Header â€“ refined per Design System v1.1
// ============================================================================
.header {
  @include p.panel-title;
  padding: v.$space-lg v.$space-xl;
  border-bottom: 2px solid v.$primary-color;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  gap: v.$space-xl;
  position: relative;
  &::before {
    content: "";
    position: absolute;
    inset: 0;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.04),
      rgba(255, 255, 255, 0)
    );
    pointer-events: none;
  }
}

.titleBlock {
  display: flex;
  flex-direction: column;
  gap: v.$space-xs;
}

.title {
  font-family: v.$font-family-accent, sans-serif;
  font-size: v.$font-size-xl;
  font-weight: 700;
  color: v.$color-white;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  margin: 0;
}

.subtitle {
  color: v.$text-secondary;
  font-size: v.$font-size-sm;
  font-family: v.$font-family-primary, sans-serif;
  max-width: 720px;
  line-height: 1.5;
}

.metaBlock {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  gap: v.$space-sm;
}

.asOf {
  font-size: v.$font-size-xs;
  color: v.$text-secondary;
}

.refreshButton {
  @include v.button-style;
  background-color: transparent;
  border: 1px solid v.$border-secondary;
  color: v.$text-primary;
  font-size: v.$font-size-sm;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  position: relative;
  &:hover:not(:disabled) {
    background-color: color.adjust(v.$primary-color, $alpha: -0.82);
    border-color: v.$primary-color;
    color: v.$color-white;
    box-shadow:
      0 0 0 1px rgba(v.$primary-color, 0.4),
      0 0 12px rgba(v.$primary-color, 0.3);
  }
  &:focus-visible {
    outline: 2px solid v.$primary-color;
    outline-offset: 2px;
    box-shadow: 0 0 0 3px rgba(v.$primary-color, 0.35);
  }
  &:disabled {
    opacity: 0.55;
    cursor: not-allowed;
  }
}

.metrics {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: v.$space-md;
}

.metricCard {
  @include p.panel-container(
    $radius: v.$border-radius-lg,
    $padding: v.$space-md
  );
  display: flex;
  flex-direction: column;
  gap: v.$space-xs;
  position: relative;
  transition:
    transform 0.25s ease,
    box-shadow 0.25s ease,
    background 0.25s ease;
  isolation: isolate;
  &::before {
    content: "";
    position: absolute;
    inset: 0;
    background: radial-gradient(
      circle at 18% 22%,
      rgba(v.$primary-color, 0.2),
      transparent 65%
    );
    mix-blend-mode: screen;
    pointer-events: none;
  }
  &:hover {
    transform: translateY(-4px);
    box-shadow:
      0 8px 28px rgba(0, 0, 0, 0.55),
      0 0 0 1px rgba(255, 255, 255, 0.1),
      0 0 24px rgba(v.$primary-color, 0.25);
  }
  &:focus-within {
    box-shadow:
      0 0 0 2px rgba(v.$primary-color, 0.4),
      0 0 0 4px rgba(v.$primary-color, 0.15);
  }
}

.metricTitle {
  font-family: v.$font-family-accent, sans-serif;
  font-size: v.$font-size-xs;
  font-weight: 600;
  color: v.$text-secondary;
  text-transform: uppercase;
  letter-spacing: 0.06em;
}

.metricValue {
  font-family: v.$font-family-numbers, monospace;
  font-size: v.$font-size-lg;
  font-weight: 700;
  color: v.$primary-color;
  text-shadow: 0 0 8px rgba(v.$primary-color, 0.5);
  font-variant-numeric: tabular-nums;
}

.metricDetail {
  font-size: v.$font-size-xs;
  color: v.$text-secondary;
  line-height: 1.4;
}

.tableWrapper {
  @include p.panel-container($radius: v.$border-radius-lg, $padding: 0);
  overflow: hidden;
}

.playerTable {
  width: 100%;
  border-collapse: collapse;
  font-size: v.$font-size-sm;
  background-color: v.$background-dark;
  font-variant-numeric: tabular-nums;
  table-layout: fixed;
  thead {
    position: sticky;
    top: 0;
    z-index: 10;
    background-color: color.adjust(v.$background-dark, $lightness: -5%);
  }
  th {
    background-color: color.adjust(v.$background-dark, $lightness: -5%);
    padding: v.$space-sm v.$space-md;
    text-align: left;
    font-weight: 700;
    color: v.$text-primary;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border-bottom: 2px solid v.$border-secondary;
    white-space: nowrap;
  }
  td {
    padding: v.$space-sm v.$space-md;
    border-bottom: 1px solid v.$border-secondary;
    color: v.$text-secondary;
    font-family: v.$font-family-numbers, monospace;
    vertical-align: middle;
    height: 56px; // establish consistent row rhythm
  }
  tbody tr {
    transition: background-color 0.2s ease;
  }
  tbody tr:nth-child(odd) {
    background-color: color.adjust(v.$background-dark, $lightness: -2%);
  }
  tbody tr:hover {
    background-color: color.adjust(v.$background-dark, $lightness: 2%);
  }
}

.clickableRow {
  cursor: pointer;
}

.playerCell {
  font-family: v.$font-family-primary, sans-serif;
  display: flex;
  flex-direction: column;
  justify-content: center; // center text vertically within enforced row height
  gap: 2px;
  line-height: 1.1;
}

.playerName {
  font-weight: 600;
  color: v.$text-primary;
}

.playerMeta {
  font-size: v.$font-size-xs;
  color: v.$text-secondary;
}

.sparklineCell {
  min-width: 140px;
  padding-top: 0; // tighter vertical alignment vs sparkline height
  padding-bottom: 0;
}

.sparklineSvg {
  width: 100%;
  height: 48px;
  display: block;
}

.sparklineBaseline {
  stroke: v.$border-secondary;
  stroke-width: 1;
  stroke-dasharray: 2, 2;
  opacity: 0.5;
}

.sparklinePath {
  fill: none;
  stroke: v.$primary-color;
  stroke-width: 2.5;
  stroke-linecap: round;
  stroke-linejoin: round;
  filter: drop-shadow(0 0 3px rgba(v.$primary-color, 0.7));
  vector-effect: non-scaling-stroke;
}

.sparklineShade {
  fill: rgba(v.$primary-color, 0.15);
}

.placeholder,
.loading,
.error {
  @include p.panel-container($padding: v.$space-xl);
  text-align: center;
  color: v.$text-secondary;
  font-style: italic;
}

.error {
  background: rgba(v.$danger-color, 0.1);
  border-color: rgba(v.$danger-color, 0.3);
  color: v.$danger-color;
}

.errorWrapper {
  @include p.panel-container($padding: v.$space-md);
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: v.$space-md;
}

.errorMessage {
  text-align: left;
  color: v.$text-primary;
}

.errorDetail {
  color: v.$text-secondary;
  margin-top: v.$space-xs;
}

.errorActions button {
  @include v.button-style;
  background: transparent;
  border: 1px solid rgba(v.$primary-color, 0.25);
  color: v.$primary-color;
  padding: v.$space-xs v.$space-md;
  border-radius: 6px;
}

// Reduced motion adjustments
@media (prefers-reduced-motion: reduce) {
  .metricCard,
  .refreshButton {
    transition: none;
    transform: none !important;
  }
  .metricCard:hover {
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.4);
  }
}
