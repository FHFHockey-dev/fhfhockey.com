@use "sass:color";
@use "styles/vars" as v;
@use "styles/panel" as p;

.header {
  @include p.panel-title;
  padding: v.$space-lg v.$space-xl;
  border-bottom: 2px solid v.$primary-color;
}

.titleBlock {
  display: flex;
  flex-direction: column;
  gap: v.$space-xs;
}

.title {
  font-family: v.$font-family-accent, sans-serif;
  font-size: v.$font-size-xl;
  font-weight: 700;
  color: v.$color-white;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  margin: 0;
}

.subtitle {
  color: v.$text-secondary;
  font-size: v.$font-size-sm;
  max-width: 720px;
  line-height: 1.5;
}

.metaBlock {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  gap: v.$space-sm;
}

.asOf {
  font-size: v.$font-size-xs;
  color: v.$text-secondary;
}

.refreshButton {
  @include v.button-style;
  background-color: transparent;
  border: 1px solid v.$border-secondary;
  color: v.$text-primary;
  font-size: v.$font-size-sm;

  &:hover:not(:disabled) {
    background-color: color.adjust(v.$primary-color, $alpha: -0.8);
    border-color: v.$primary-color;
    color: v.$color-white;
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

.metrics {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: v.$space-md;
}

.metricCard {
  @include p.panel-container($radius: v.$border-radius-lg, $padding: v.$space-md);
  display: flex;
  flex-direction: column;
  gap: v.$space-xs;
  transition: transform 0.2s ease, box-shadow 0.2s ease;

  &:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.5);
  }
}

.metricTitle {
  font-family: v.$font-family-accent, sans-serif;
  font-size: v.$font-size-sm;
  font-weight: 600;
  color: v.$text-secondary;
  text-transform: uppercase;
  letter-spacing: 0.06em;
}

.metricValue {
  font-family: v.$font-family-numbers, monospace;
  font-size: v.$font-size-lg;
  font-weight: 700;
  color: v.$primary-color;
  text-shadow: 0 0 8px rgba(v.$primary-color, 0.5);
}

.metricDetail {
  font-size: v.$font-size-xs;
  color: v.$text-secondary;
  line-height: 1.4;
}

.tableWrapper {
  @include p.panel-container($radius: v.$border-radius-lg, $padding: 0);
  overflow: hidden;
}

.playerTable {
  width: 100%;
  border-collapse: collapse;
  font-size: v.$font-size-sm;

  thead {
    background: rgba(v.$background-dark, 0.5);
  }

  th {
    padding: v.$space-sm v.$space-md;
    text-align: left;
    font-weight: 700;
    color: v.$text-primary;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border-bottom: 2px solid v.$border-secondary;
  }

  td {
    padding: v.$space-sm v.$space-md;
    border-bottom: 1px solid v.$border-secondary;
    color: v.$text-secondary;
    font-family: v.$font-family-numbers, monospace;
  }

  tbody tr {
    transition: background-color 0.2s ease;
    &:last-child td {
      border-bottom: none;
    }
  }

  tbody tr:hover {
    background-color: rgba(v.$primary-color, 0.1);
  }
}

.clickableRow {
  cursor: pointer;
}

.playerCell {
  font-family: v.$font-family-primary, sans-serif;
  display: flex;
  flex-direction: column;
}

.playerName {
  font-weight: 600;
  color: v.$text-primary;
}

.playerMeta {
  font-size: v.$font-size-xs;
  color: v.$text-secondary;
}

.sparklineCell {
  min-width: 140px;
}

.sparklineSvg {
  width: 100%;
  height: 48px;
}

.sparklineBaseline {
  stroke: v.$border-secondary;
  stroke-width: 1;
  stroke-dasharray: 2, 2;
}

.sparklinePath {
  fill: none;
  stroke: v.$primary-color;
  stroke-width: 2.5;
  stroke-linecap: round;
  stroke-linejoin: round;
  filter: drop-shadow(0 0 3px rgba(v.$primary-color, 0.7));
}

.sparklineShade {
  fill: rgba(v.$primary-color, 0.15);
}

.placeholder,
.loading,
.error {
  @include p.panel-container($padding: v.$space-xl);
  text-align: center;
  color: v.$text-secondary;
  font-style: italic;
}

.error {
  background: rgba(v.$danger-color, 0.1);
  border-color: rgba(v.$danger-color, 0.3);
  color: v.$danger-color;
}
