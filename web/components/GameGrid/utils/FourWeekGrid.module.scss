// components/GameGrid/FourWeekGrid.module.scss

@use "sass:color";
@use "styles/vars" as v; // Use the aliased import
@use "sass:math";

/* --- Main Container --- */
.container {
  width: 100%;
  margin: 0 auto;
  transition: margin-bottom v.$transition-duration v.$transition-easing;
  // Framing is now applied by the parent (.fourWeekGridContainerAll)
  background-color: v.$background-dark; // Set background for content area
  display: flex; // Use flex to manage internal height
  flex-direction: column; // Stack title and wrapper
  height: 100%; // ** Allow filling parent height **

  &.minimized {
    margin-bottom: 10px;
    // When minimized, container itself doesn't need height: 100%
    @media (min-width: v.$breakpoint-desktop) {
      height: auto; // Reset height on desktop when minimized
    }
  }
}

/* --- Title Header Styling --- */
.titleHeader {
  background-color: v.$background-dark;
  padding: 12px 15px;
  position: relative;
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 2px solid transparent;
  transition: border-bottom-color v.$transition-duration v.$transition-easing;
  flex-shrink: 0; // Don't shrink title header

  // Add border when not minimized
  .container:not(.minimized) & {
    border-bottom-color: v.$secondary-color;
  }

  @media (max-width: #{v.$breakpoint-tablet - 1px}) {
    cursor: pointer;
    user-select: none;
    // Remove border when minimized on mobile
    .container.minimized & {
      border-bottom-color: transparent;
    }
  }
}

.titleText {
  font-family: v.$font-family-primary;
  font-size: clamp(1.2rem, 3.5vw, 1.6rem);
  font-weight: 100;
  color: v.$text-color-primary;
  letter-spacing: 1px;
  flex-grow: 1;
  text-align: left;
}

.spanColorBlue {
  color: v.$secondary-color;
  font-weight: 300;
}

.minimizeToggleIcon {
  font-size: 1.2rem;
  position: absolute;
  right: 15px;
  top: 50%;
  transform: translateY(-50%) rotate(0deg);
  color: v.$secondary-color;
  transition: transform 0.3s v.$transition-easing;
  flex-shrink: 0;
  &.minimized {
    transform: translateY(-50%) rotate(-180deg);
  }
}

/* --- Table Wrapper (Handles Minimize Collapse AND Vertical Scroll) --- */
.tableWrapper {
  width: 100%;
  overflow: hidden; // Horizontal hidden, vertical managed below
  transition: max-height 0.4s v.$transition-easing,
    opacity 0.3s v.$transition-easing, visibility 0.3s v.$transition-easing;
  max-height: 5000px;
  opacity: 1;
  visibility: visible;
  background-color: v.$background-dark;
  flex-grow: 1; // ** Take remaining vertical space in .container **
  overflow-y: auto; // ** Allow VERTICAL scrolling **
  // Hide scrollbar visually
  &::-webkit-scrollbar {
    display: none;
  }
  -ms-overflow-style: none;
  scrollbar-width: none;

  // Collapse when minimized
  .container.minimized & {
    max-height: 0;
    opacity: 0;
    visibility: hidden;
    overflow-y: hidden; // Prevent scrollbar flash during collapse
  }
}

/* --- Base Table Styling --- */
.table {
  margin: 0 auto;
  color: v.$text-color-primary;
  border-spacing: 0;
  border-collapse: collapse;
  font-size: v.$font-size-small;
  text-align: center;
  width: 100%;
  table-layout: fixed; // Fixed layout for width control
  // height: 100%; // Table itself doesn't need 100% height, wrapper controls scroll
}

/* --- Table Header Styling --- */
.table thead {
  position: sticky; // ** Sticky header **
  top: 0; // ** Stick to top of .tableWrapper **
  z-index: 2;
  background-color: v.$background-dark; // Needed for sticky header background
}

.table th {
  background-color: v.$background-dark; // Redundant due to thead bg, but safe
  color: v.$text-color-secondary;
  font-weight: 600;
  padding: 8px 4px; // Reduced padding
  font-family: v.$font-family-primary;
  font-size: 11px; // Small header font
  text-transform: uppercase;
  letter-spacing: 0.3px;
  border: 0.5px solid v.$border-color-secondary;
  border-top: none;
  white-space: normal; // Allow wrapping
  vertical-align: middle;
  height: 35px; // Give header a bit of fixed height

  // Column Widths: Team (20%) + 4 Metrics (20% each) = 100%
  width: 20%;

  @media (max-width: #{v.$breakpoint-tablet - 1px}) {
    padding: 6px 2px;
    font-size: 10px;
    height: 30px;
  }
}

.table th:first-child {
  // Team Header
  text-align: left;
  padding-left: 10px;
  border-left: none;
  border-right: 2px solid v.$secondary-color;
  width: 20%; // Team column width
  white-space: nowrap;
  @media (max-width: #{v.$breakpoint-tablet - 1px}) {
    padding-left: 8px;
  }
}

.table th:last-child {
  border-right: none;
}

/* --- Sort Button Styling --- */
.sortButton {
  background: none;
  border: none;
  color: inherit;
  font: inherit;
  letter-spacing: inherit;
  cursor: pointer;
  padding: 0;
  display: inline-flex;
  align-items: center;
  width: 100%;
  justify-content: center;
  &:focus {
    outline: 1px dotted v.$primary-color;
    outline-offset: 2px;
  }
  th:first-child & {
    justify-content: flex-start;
  } // Align team sort left
}

/* --- Table Body Styling --- */
.table tbody tr {
  transition: background-color v.$transition-duration v.$transition-easing;
  &:nth-child(even) {
    background-color: v.$background-light;
  }
  &:nth-child(odd) {
    background-color: v.$background-dark;
  }
  &:hover {
    background-color: color.scale(v.$primary-color, $lightness: -30%);
  }
}

.table td {
  border: 0.5px solid v.$border-color-secondary;
  padding: 6px 4px; // Reduced padding
  font-family: v.$font-family-primary;
  vertical-align: middle;
  font-size: 12px;
  height: 36px; // Slightly shorter body rows

  @media (max-width: #{v.$breakpoint-tablet - 1px}) {
    padding: 5px 3px;
    font-size: 11px;
    height: 34px;
  }
}

.table td:first-child {
  // Team Data Cell
  border-left: none;
  border-right: 2px solid v.$secondary-color;
  text-align: center;
  padding: 4px; // Less padding around logo
  width: 20%; // Match header width

  .teamInfo {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 28px;
  }
  .teamLogo {
    display: block;
    max-width: 24px;
    height: auto;
    filter: drop-shadow(0 0 1px v.$text-color-primary);
  }
}

.table td:last-child {
  border-right: none;
}

/* --- Averages Row Styling --- */
.averagesRow td {
  background-color: darken(v.$background-dark, 5%);
  color: v.$text-color-secondary;
  font-weight: bold;
  font-size: 11px; // Smaller avg font
  border-top: 2px solid v.$border-color-secondary;
  padding: 5px 4px; // Less padding for avg row
  height: 30px; // Shorter avg row

  &:first-child {
    text-align: left;
    padding-left: 10px;
    border-right: 2px solid v.$secondary-color;
    @media (max-width: #{v.$breakpoint-tablet - 1px}) {
      padding-left: 8px;
    }
  }
}

/* --- Color-Coding & Message --- */
.red {
  background-color: rgba(255, 0, 0, 0.2);
}
.orange {
  background-color: rgba(255, 165, 0, 0.2);
}
.yellow {
  background-color: rgba(255, 255, 0, 0.2);
}
.green {
  background-color: rgba(0, 128, 0, 0.25);
}
.grey {
  background-color: rgba(128, 128, 128, 0.2);
}
.message {
  padding: 30px 15px;
  text-align: center;
  color: v.$text-color-secondary;
  background-color: v.$background-dark;
}
