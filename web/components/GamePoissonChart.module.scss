/* GamePoissonChart.module.scss */

@use "sass:color";
@use "styles/vars" as v; // Import variables from vars.scss
@use "sass:math";

.chartContainer {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-evenly;
  width: 100%; // Full width of the parent container
  height: auto; // Allow height to adjust based on content
  max-width: 100%; // Prevent overflow
  height: auto;
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 5px;
  padding: 10px;
  color: #eee; // Default text color for the container
}

.predictionValues {
  display: flex;
  flex-direction: column; // Consider 'column' on smaller screens if needed
  align-items: center;
  justify-content: center;
  width: 20%; // Take full width of container
  flex-wrap: wrap; // Allow items to wrap on smaller screens
  gap: 10px; // Space between items
  margin-bottom: 15px; // Space before the chart
}

.predictionText {
  margin-top: 10px; // Adjusted from 20px for better balance
  width: auto; // Let content define width, or set a max-width
  flex-grow: 1; // Allow it to grow if needed
  min-width: 200px; // Prevent it from becoming too small
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 16px;
  font-weight: bold;
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 5px;
  padding: 10px;
  text-align: center; // Center text inside
  box-sizing: border-box; // Include padding in width calculation
}

.winProbabilityBox {
  height: 3.5em;
  min-width: 200px; // Minimum width before wrapping
  flex-grow: 1; // Allow boxes to grow and fill space
  justify-content: center; // Center content horizontally
  display: flex;
  flex-direction: row;
  align-items: center;
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 5px;
  padding: 10px;
  font-size: 0.9rem; // Slightly smaller font for probability
  box-sizing: border-box;
}

.teamLogo {
  width: 40px;
  height: auto; // Maintain aspect ratio
  margin-right: 10px;
}

.otPredictionText {
  margin-top: 10px; // Consistent margin
  font-weight: bold;
  width: 100%; // Span full width below others if wrapped
  text-align: center;
  padding: 5px 0;
}

.chartSvg {
  align-self: center;
  margin-top: 10px; // Reduced margin from 20px
  background-color: v.$background-dark;
  border-radius: 5px;
  padding: 0 10px;
  margin: 10px;
  // Width/Height are set by D3, but we can set max-width for responsiveness
  max-width: 100%; // Ensure it scales down
  box-sizing: border-box;

  // --- Styles for elements generated by D3 ---

  // Axis text styling
  text {
    font-family: sans-serif;
    fill: currentColor; // Inherit color from container
  }

  .xAxis g.tick text, // Target X axis tick text
  .yAxis g.tick text {
    // Target Y axis tick text
    font-size: 12px;
  }

  .axisLabel {
    font-size: 16px;
    text-anchor: middle;
  }

  .chartTitle {
    font-size: 18px;
    text-anchor: middle;
    padding-top: 10px;
  }

  // Default heatmap rectangle style (can be overridden by D3 fill/stroke)
  rect {
    stroke-width: 1px;
    stroke: #808080;
    opacity: 0.8;
    rx: 4; // Optional: for rounded corners (set here or in D3)
    ry: 4; // Optional: for rounded corners (set here or in D3)

    &:hover {
      // Style on hover (alternative to D3 mouseover if needed)
      // stroke: black;
      // opacity: 1;
    }
  }
}

// --- Tooltip styles (applied to the div created by D3) ---
// Important: Select the body for the tooltip or make sure the tooltip container exists
// If you don't select body, D3 needs to append to a specific styled container
.tooltip {
  // Use :global if appending to body, otherwise use a local class
  opacity: 0; // Initially hidden
  position: absolute;
  background-color: black;
  border: solid 1px #555;
  border-radius: 5px;
  padding: 10px;
  color: white;
  pointer-events: none; // Critical: prevent tooltip from blocking mouse events
  font-size: 0.85rem;
  white-space: nowrap; // Prevent wrapping
  z-index: 100; // Ensure it's on top
  transition: opacity 0.2s ease-in-out; // Smooth fade
}
