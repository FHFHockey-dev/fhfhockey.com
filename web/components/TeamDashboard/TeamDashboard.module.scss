@use "sass:color";
@use "styles/vars" as v;

/* ==========================================================================
   MODERN DASHBOARD LAYOUT - COMPACT & ELEGANT
   ========================================================================== */

.teamDashboard {
  width: 100%;
  margin-bottom: v.$space-lg;
}

.container {
  background: linear-gradient(
    135deg,
    v.$background-dark 0%,
    color-mix(in srgb, v.$background-dark 90%, v.$primary-color 10%) 100%
  );
  border-radius: v.$border-radius-lg;
  padding: v.$space-md;
  color: v.$text-primary;
  min-height: 80vh;
  max-height: 80vh;

  // 15-column grid layout as specified
  display: grid;
  grid-template-columns: repeat(15, 1fr);
  grid-template-rows: repeat(6, 1fr);
  grid-column-gap: v.$space-sm;
  grid-row-gap: v.$space-sm;

  @media (max-width: v.$breakpoint-desktop) {
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(8, 1fr);
    gap: v.$space-xs;
    padding: v.$space-sm;
  }

  @media (max-width: v.$breakpoint-tablet) {
    display: flex;
    flex-direction: column;
    gap: v.$space-sm;
    padding: v.$space-xs;
  }
}

/* ==========================================================================
   COMPACT CARD SYSTEM
   ========================================================================== */

.card,
.teamStatisticsCard {
  background: rgba(255, 255, 255, 0.02);
  border: 1px solid color-mix(in srgb, v.$border-primary 30%, transparent 70%);
  border-radius: v.$border-radius-md;
  overflow: hidden;
  transition: all v.$transition-duration v.$transition-easing;
  backdrop-filter: blur(8px);
  position: relative;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(
      90deg,
      var(--team-primary-color, v.$primary-color),
      var(--team-secondary-color, v.$secondary-color)
    );
    opacity: 0.6;
  }

  &:hover {
    border-color: color-mix(in srgb, v.$primary-color 50%, transparent 50%);
    transform: translateY(-1px);
    box-shadow:
      0 4px 20px rgba(0, 0, 0, 0.1),
      0 0 0 1px color-mix(in srgb, v.$primary-color 20%, transparent 80%);
    background: rgba(255, 255, 255, 0.04);
  }

  // Grid positioning - div1: Team Leaders
  &.teamStatisticsCard {
    grid-area: 1 / 1 / 7 / 4;

    @media (max-width: v.$breakpoint-desktop) {
      grid-area: 1 / 1 / 5 / 5;
    }

    @media (max-width: v.$breakpoint-tablet) {
      order: 1;
    }
  }

  // div2: Goaltending Card (far right)
  &.goaltendingCard {
    grid-area: 1 / 12 / 7 / 16;
    @media (max-width: v.$breakpoint-desktop) {
      grid-area: 5 / 5 / 9 / 9;
    }

    @media (max-width: v.$breakpoint-tablet) {
      order: 2;
    }
  }

  // div3: Advanced Analytics
  &.advancedAnalyticsCard {
    grid-area: 1 / 9 / 4 / 12;

    @media (max-width: v.$breakpoint-desktop) {
      grid-area: 1 / 5 / 4 / 9;
    }

    @media (max-width: v.$breakpoint-tablet) {
      order: 3;
    }
  }

  // div4: Team Rankings
  &.teamRankingsCard {
    grid-area: 1 / 4 / 4 / 9;

    @media (max-width: v.$breakpoint-desktop) {
      grid-area: 5 / 1 / 8 / 5;
    }

    @media (max-width: v.$breakpoint-tablet) {
      order: 4;
    }
  }

  // div5: Enhanced Momentum Card
  &.enhancedMomentumCard {
    grid-area: 4 / 4 / 7 / 12;

    @media (max-width: v.$breakpoint-desktop) {
      grid-area: 1 / 1 / 5 / 5;
    }

    @media (max-width: v.$breakpoint-tablet) {
      order: 5;
    }
  }
}

/* ==========================================================================
   COMPACT CARD HEADERS
   ========================================================================== */

.cardHeader,
.tsCardHeader {
  background: color-mix(in srgb, v.$background-header 80%, transparent 20%);
  padding: v.$space-sm v.$space-md;
  border-bottom: 1px solid
    color-mix(in srgb, v.$border-primary 20%, transparent 80%);
  display: flex;
  justify-content: space-between;
  align-items: center;
  min-height: 40px;

  h3 {
    font-size: v.$font-size-md;
    font-weight: 700;
    margin: 0;
    color: v.$text-primary;
    font-family: v.$font-family-accent;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    line-height: 1.2;
  }

  .cardIcon {
    font-size: v.$font-size-md;
    opacity: 0.6;
    color: var(--team-accent-color, v.$secondary-color);
  }

  .infoIcon {
    background: color-mix(in srgb, v.$info-color 20%, transparent 80%);
    color: v.$info-color;
    border-radius: 50%;
    width: 18px;
    height: 18px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    margin-left: v.$space-xs;
    cursor: help;
    transition: all v.$transition-duration;

    &:hover {
      background: color-mix(in srgb, v.$info-color 30%, transparent 70%);
      transform: scale(1.1);
    }
  }

  .cardToggle {
    display: flex;
    gap: 2px;
    background: color-mix(in srgb, v.$background-dark 60%, transparent 40%);
    border-radius: v.$border-radius-sm;
    padding: 2px;
  }

  .toggleButton {
    background: transparent;
    border: none;
    color: v.$text-secondary;
    font-size: v.$font-size-xs;
    font-weight: 600;
    padding: 4px 8px;
    border-radius: v.$border-radius-sm;
    cursor: pointer;
    transition: all v.$transition-duration;

    &:hover {
      background: color-mix(in srgb, v.$primary-color 20%, transparent 80%);
      color: v.$text-primary;
    }

    &.active {
      background: v.$primary-color;
      color: v.$text-button;
    }
  }
}

.cardContent,
.tsCardContent {
  padding: v.$space-sm;
  display: flex;
  flex-direction: column;
}

/* ==========================================================================
   ENHANCED STATISTICS GRID SYSTEM
   ========================================================================== */

.statsGrid,
.tsStatsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: v.$space-xs;
  margin-bottom: v.$space-sm;

  // Special handling for advanced analytics (2x4 grid)
  .advancedAnalyticsCard & {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(4, 1fr);
    height: 100%;

    @media (max-width: v.$screen-small-max) {
      grid-template-columns: 1fr;
      grid-template-rows: repeat(8, 1fr);
    }
  }
}

.statItem,
.tsStatItem {
  background: color-mix(in srgb, v.$background-lighter 60%, transparent 40%);
  padding: v.$space-sm;
  border-radius: v.$border-radius-sm;
  text-align: center;
  border: 1px solid color-mix(in srgb, v.$border-secondary 30%, transparent 70%);
  transition: all v.$transition-duration v.$transition-easing;
  min-height: 60px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;
  overflow: hidden;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(
      90deg,
      var(--team-primary-color, v.$primary-color) 0%,
      var(--team-accent-color, v.$secondary-color) 100%
    );
    transform: scaleX(0);
    transition: transform v.$transition-duration;
  }

  &:hover {
    transform: translateY(-1px);
    background: color-mix(in srgb, v.$background-lighter 80%, transparent 20%);
    border-color: color-mix(in srgb, v.$primary-color 40%, transparent 60%);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);

    &::before {
      transform: scaleX(1);
    }
  }
}

.statValue,
.tsStatValue {
  display: block;
  font-size: v.$font-size-sm;
  font-weight: 700;
  margin-bottom: v.$space-xs;
  color: v.$text-primary;
  font-family: v.$font-family-accent;
  line-height: 1.1;

  &.excellent {
    color: v.$success-color;
  }
  &.average {
    color: v.$warning-color;
  }
  &.poor {
    color: v.$danger-color;
  }
  &.positive {
    color: v.$success-color;
  }
  &.negative {
    color: v.$danger-color;
  }

  &.winStreak {
    color: v.$success-color;
    text-shadow: 0 0 8px
      color-mix(in srgb, v.$success-color 30%, transparent 70%);
  }

  &.lossStreak {
    color: v.$danger-color;
    text-shadow: 0 0 8px
      color-mix(in srgb, v.$danger-color 30%, transparent 70%);
  }
}

.statLabel,
.tsStatLabel {
  display: block;
  font-size: v.$font-size-xxs;
  color: v.$text-secondary;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  font-weight: 500;
  line-height: 1.2;
}

/* ==========================================================================
   TEAM LEADERS SECTION
   ========================================================================== */

.teamLeaders {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.leadersGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: v.$space-md;
  height: 100%;
}

.leaderCategory {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.categoryTitle {
  font-size: v.$font-size-sm;
  font-weight: 700;
  color: var(--team-accent-color, v.$secondary-color);
  text-transform: uppercase;
  letter-spacing: 0.1em;
  margin: 0 0 v.$space-sm 0;
  padding-bottom: v.$space-xs;

  border-bottom: 1px solid
    color-mix(
      in srgb,
      var(--team-accent-color, v.$secondary-color) 30%,
      transparent 70%
    );
}

.leadersList {
  display: flex;
  flex-direction: column;
  gap: v.$space-xs;
  flex: 1;
}

.leaderItem {
  display: grid;
  grid-template-columns: auto 1fr auto;
  gap: v.$space-sm;
  align-items: center;
  padding: 0 1rem 0 0;
  background: color-mix(in srgb, v.$background-lighter 40%, transparent 60%);
  border-radius: v.$border-radius-sm;
  border: 1px solid color-mix(in srgb, v.$border-secondary 20%, transparent 80%);
  transition: all v.$transition-duration;

  &:hover {
    background: color-mix(in srgb, v.$background-lighter 60%, transparent 40%);
    border-color: color-mix(
      in srgb,
      var(--team-primary-color, v.$primary-color) 40%,
      transparent 60%
    );
    transform: translateX(2px);

    &:hover .playerHeadshot {
      border: 1px solid var(--team-jersey-color, v.$primary-color);
      border-radius: 3px 0 0 3px;
    }
  }

  .playerHeadshotContainer {
    position: relative;
    width: 80px;
    height: 80px;
    background-color: var(--team-primary-color);
    border-radius: v.$border-radius-sm 0 0 v.$border-radius-sm;
  }

  .playerHeadshot {
    width: 100%;
    height: 100%;
    border-radius: v.$border-radius-sm 0 0 v.$border-radius-sm;
    object-fit: cover;
    border: 0 0 6px;
    object-fit: cover;
    border: 2px solid
      color-mix(
        in srgb,
        var(--team-secondary-color, v.$primary-color) 50%,
        transparent 50%
      );
  }
}

.leaderRank {
  position: absolute;
  bottom: 0px;
  right: 0px;
  background: var(--team-accent-color, v.$secondary-color);
  color: v.$primary-color;
  font-size: 10px;
  font-weight: 700;
  width: 20px;
  height: 20px;
  border-radius: 4px 0 0 0;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 2px solid v.$background-dark;
}

.leaderInfo {
  display: flex;
  flex-direction: column;
  gap: 2px;
  min-width: 0;
}

.leaderName {
  font-size: v.$font-size-sm;
  font-weight: 600;
  color: v.$text-primary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.leaderPosition {
  font-size: v.$font-size-xs;
  color: v.$text-secondary;
  font-weight: 500;
}

.leaderStats {
  display: flex;
  flex-direction: column;
  align-items: end;
  gap: 2px;
}

.leaderValue {
  font-size: v.$font-size-md;
  font-weight: 700;
  color: var(--team-secondary-color, v.$secondary-color);
  font-family: v.$font-family-accent;
}

.leaderGames {
  font-size: v.$font-size-xs;
  color: v.$text-secondary;
}

.noLeaders {
  color: v.$text-secondary;
  font-style: italic;
  text-align: center;
  padding: v.$space-lg;
}

/* ==========================================================================
   RANKINGS SECTION WITH COMPACT LAYOUT
   ========================================================================== */

.combinedTeamStatsCard {
  display: flex;
  flex-direction: column;
}

.statsTitle {
  font-size: v.$font-size-md;
  font-weight: 700;
  color: var(--team-accent-color, v.$secondary-color);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  margin: 0 0 v.$space-sm 0;
  text-align: center;
}

.teamIdentity {
  margin-bottom: v.$space-xxs;
}

.positionSummary {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: v.$space-sm;
  padding-bottom: v.$space-xs;
}

.positionStat {
  text-align: center;
  padding: v.$space-sm;
  background: color-mix(in srgb, v.$background-lighter 40%, transparent 60%);
  border-radius: v.$border-radius-sm;
  border: 1px solid
    color-mix(
      in srgb,
      var(--team-primary-color, v.$primary-color) 20%,
      transparent 80%
    );
}

.positionValue {
  display: block;
  font-size: v.$font-size-lg;
  font-weight: 700;
  color: v.$text-primary;
  font-family: v.$font-family-accent;
}

.positionLabel {
  font-size: v.$font-size-xs;
  color: v.$text-secondary;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  margin-top: v.$space-xs;
}

.quickStatsSummary {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: v.$space-xs;
  margin-bottom: v.$space-sm;

  @media (max-width: v.$screen-small-max) {
    grid-template-columns: repeat(2, 1fr);
  }
}

.summaryItem {
  text-align: center;
  padding: v.$space-xs;
  background: color-mix(in srgb, v.$background-lighter 40%, transparent 60%);
  border-radius: v.$border-radius-sm;
}

.summaryValue {
  display: block;
  font-size: v.$font-size-sm;
  font-weight: 700;
  color: v.$text-primary;
  margin-bottom: 2px;

  &.positive {
    color: v.$success-color;
  }
  &.negative {
    color: v.$danger-color;
  }
}

.summaryLabel {
  font-size: v.$font-size-xs;
  color: v.$text-secondary;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.teamStatsWithRankings {
  flex: 1;
  overflow-y: auto;
}

.statsRankingsGrid {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: v.$space-xs;
}

.statWithRank {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  padding: v.$space-xs v.$space-sm;
  background: color-mix(in srgb, v.$background-lighter 30%, transparent 70%);
  border-radius: v.$border-radius-sm;
  border: 1px solid color-mix(in srgb, v.$border-secondary 20%, transparent 80%);
  transition: all v.$transition-duration;

  &:hover {
    background: color-mix(in srgb, v.$background-lighter 50%, transparent 50%);
    border-color: color-mix(
      in srgb,
      var(--team-primary-color, v.$primary-color) 30%,
      transparent 70%
    );
  }
}

.statValueRank {
  display: flex;
  align-items: center;
  gap: v.$space-sm;
}

.rankValue {
  font-size: v.$font-size-sm;
  font-weight: 600;
  padding: 2px 6px;
  border-radius: v.$border-radius-sm;
  min-width: 28px;
  text-align: center;
}

/* ==========================================================================
   LEAGUE RANKINGS COMPACT DISPLAY
   ========================================================================== */

.leagueRankings {
  margin-top: v.$space-sm;
  border-radius: v.$border-radius-sm;
  height: 100%;
}

.rankingsTitle {
  font-size: v.$font-size-sm;
  font-weight: 600;
  margin: 0 0 v.$space-sm 0;
  color: v.$text-primary;
  text-align: center;
}

.rankingsGrid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-column-gap: v.$space-md;
  grid-row-gap: v.$space-sm;
  height: 100%;

  @media (max-width: v.$screen-small-max) {
    grid-template-columns: 1fr;
  }
}

.rankingCategory {
  background: color-mix(in srgb, v.$background-middle 40%, transparent 60%);
  border-radius: v.$border-radius-sm;
  border: 1px solid color-mix(in srgb, v.$border-secondary 20%, transparent 80%);
  overflow: hidden;
}

.rankingTitle {
  background: color-mix(in srgb, v.$background-header 60%, transparent 40%);
  padding: v.$space-xs v.$space-sm;
}

.rankingItemList {
  padding: v.$space-xs;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  // height: calc(100% - 40px); // Adjust for title height
}

.rankingItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 2px v.$space-xs;
  margin-bottom: 2px;

  &:last-child {
    margin-bottom: 0;
  }
}

.rankingLabel {
  font-size: v.$font-size-xs;
  color: v.$text-secondary;
  font-weight: 500;
}

.rankingValue {
  font-size: v.$font-size-xs;
  font-weight: 700;
  padding: 1px 4px;
  border-radius: v.$border-radius-sm;
  min-width: 24px;
  text-align: center;
}

/* ==========================================================================
   GOALTENDING SECTION ENHANCED
   ========================================================================== */

.goaltendingOverview {
  margin-bottom: v.$space-xs;
}

.goaltendingGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: v.$space-sm;

  @media (max-width: v.$screen-small-max) {
    grid-template-columns: 1fr;
  }
}

.goaltendingStat {
  background: color-mix(in srgb, v.$background-lighter 40%, transparent 60%);
  padding: v.$space-sm;
  border-radius: v.$border-radius-sm;
  text-align: center;
  border: 1px solid color-mix(in srgb, v.$border-secondary 20%, transparent 80%);
  transition: all v.$transition-duration;

  &:hover {
    transform: translateY(-1px);
    background: color-mix(in srgb, v.$background-lighter 60%, transparent 40%);
    border-color: color-mix(
      in srgb,
      var(--team-primary-color, v.$primary-color) 30%,
      transparent 70%
    );
  }
}

.individualGoalies {
  margin-top: v.$space-xs;
}

.sectionTitle {
  font-size: v.$font-size-sm;
  font-weight: 600;
  margin: 0 0 v.$space-sm 0;
  color: v.$text-primary;
  text-align: center;
}

.goalieCardsGrid {
  display: grid;
  grid-template-columns: 1fr;
  gap: v.$space-sm;
}

.goalieCard {
  background: color-mix(in srgb, v.$background-lighter 30%, transparent 70%);
  border: 1px solid color-mix(in srgb, v.$border-secondary 20%, transparent 80%);
  border-radius: v.$border-radius-sm;
  overflow: hidden;
  transition: all v.$transition-duration;

  &:hover {
    background: color-mix(in srgb, v.$background-lighter 50%, transparent 50%);
    border-color: color-mix(
      in srgb,
      var(--team-primary-color, v.$primary-color) 40%,
      transparent 60%
    );
    transform: translateY(-1px);
  }
}

.goalieCardHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: v.$space-sm;
  background: color-mix(in srgb, v.$background-header 40%, transparent 60%);
  border-bottom: 1px solid
    color-mix(in srgb, v.$border-secondary 20%, transparent 80%);
}

.goalieName {
  font-weight: 600;
  font-size: v.$font-size-sm;
  font-family: v.$font-family-accent;
  color: v.$text-primary;
  text-transform: capitalize;
}

.goalieRole {
  font-size: v.$font-size-xs;
  font-weight: 700;
  padding: 2px 6px;
  border-radius: v.$border-radius-sm;
  text-transform: uppercase;
  letter-spacing: 0.05em;

  &.starter {
    background: v.$success-color;
    color: v.$text-button;
  }

  &.backup {
    background: v.$warning-color;
    color: v.$text-button;
  }

  &.reserve {
    background: v.$color-grey-medium;
    color: v.$text-button;
  }
}

.goalieStatsGrid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: v.$space-xs;
  padding: v.$space-sm;
}

.goalieStatItem {
  text-align: center;
  background: color-mix(in srgb, v.$background-lighter 60%, transparent 40%);
  padding: v.$space-xs;
  border-radius: v.$border-radius-sm;
  border: 1px solid color-mix(in srgb, v.$border-secondary 15%, transparent 85%);
  transition: all v.$transition-duration;

  &:hover {
    transform: translateY(-1px);
    background: color-mix(in srgb, v.$background-lighter 80%, transparent 20%);
  }
}

.goalieStatValue {
  display: block;
  font-size: v.$font-size-sm;
  font-weight: 700;
  margin-bottom: 2px;
  color: v.$text-primary;
  font-family: v.$font-family-accent;

  &.excellent {
    color: v.$success-color;
  }
  &.average {
    color: v.$warning-color;
  }
  &.poor {
    color: v.$danger-color;
  }
}

.goalieStatLabel {
  font-size: v.$font-size-xs;
  color: v.$text-secondary;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

/* ==========================================================================
   WORKLOAD VISUALIZATION
   ========================================================================== */

.workloadSection {
  margin: v.$space-sm 0;
  padding: 0 v.$space-sm;
}

.workloadBar {
  width: 100%;
  height: 6px;
  background: color-mix(in srgb, v.$background-dark 60%, transparent 40%);
  border-radius: v.$border-radius-sm;
  overflow: hidden;
  margin-bottom: v.$space-xs;
}

.workloadFill {
  height: 100%;
  border-radius: v.$border-radius-sm;
  transition: width v.$transition-duration;
  background: linear-gradient(
    90deg,
    var(--team-primary-color, v.$primary-color),
    var(--team-secondary-color, v.$secondary-color)
  );
}

.workloadLabel {
  font-size: v.$font-size-xs;
  color: v.$text-secondary;
  text-align: center;
  font-weight: 500;
}

.workloadDistribution {
  margin-top: v.$space-md;
  padding-top: v.$space-sm;
  border-top: 1px solid
    color-mix(in srgb, v.$border-secondary 20%, transparent 80%);
}

.workloadDistributionBar {
  display: flex;
  height: 8px;
  border-radius: v.$border-radius-sm;
  overflow: hidden;
  background: color-mix(in srgb, v.$background-dark 40%, transparent 60%);
  border: 1px solid color-mix(in srgb, v.$border-secondary 20%, transparent 80%);
  margin-bottom: v.$space-sm;
}

.workloadSegment {
  height: 100%;
  transition: all v.$transition-duration;
  cursor: pointer;

  &:hover {
    filter: brightness(1.2);
  }
}

.workloadLegend {
  display: flex;
  flex-wrap: wrap;
  gap: v.$space-sm;
  justify-content: center;
}

.legendItem {
  display: flex;
  align-items: center;
  gap: v.$space-xs;
  padding: v.$space-xs;
  background: color-mix(in srgb, v.$background-lighter 30%, transparent 70%);
  border-radius: v.$border-radius-sm;
  border: 1px solid color-mix(in srgb, v.$border-secondary 15%, transparent 85%);
  transition: all v.$transition-duration;

  &:hover {
    background: color-mix(in srgb, v.$background-lighter 50%, transparent 50%);
  }
}

.legendColor {
  width: 12px;
  height: 12px;
  border-radius: v.$border-radius-sm;
  border: 1px solid color-mix(in srgb, v.$border-secondary 30%, transparent 70%);
}

.legendText {
  font-size: v.$font-size-xs;
  color: v.$text-primary;
  font-weight: 500;
}

/* ==========================================================================
   MOMENTUM CARD ENHANCEMENTS
   ========================================================================== */

.timelineSection {
  margin-bottom: v.$space-xs;
}

.metricsSection {
  padding: v.$space-sm 0;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
}

/* ==========================================================================
   ADVANCED ANALYTICS SPECIFIC STYLES
   ========================================================================== */

.xgContainer {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: v.$space-xs;
  width: 100%;
}

.xgStat {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: v.$space-xs;
  background: color-mix(in srgb, v.$background-darker 50%, transparent 50%);
  border-radius: v.$border-radius-sm;
  border: 1px solid color-mix(in srgb, v.$border-secondary 15%, transparent 85%);
}

/* ==========================================================================
   LOADING AND ERROR STATES
   ========================================================================== */

.loading,
.loadingState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: v.$space-xl;
  color: v.$text-secondary;
  height: 100%;
  min-height: 200px;

  .spinner,
  .loadingSpinner {
    width: 32px;
    height: 32px;
    border: 3px solid color-mix(in srgb, v.$primary-color 20%, transparent 80%);
    border-top: 3px solid v.$primary-color;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin-bottom: v.$space-md;
  }

  span {
    font-size: v.$font-size-sm;
    font-weight: 500;
  }
}

.error {
  background: color-mix(in srgb, v.$danger-color 10%, transparent 90%);
  border: 1px solid color-mix(in srgb, v.$danger-color 30%, transparent 70%);
  border-radius: v.$border-radius-md;
  padding: v.$space-lg;
  color: v.$danger-color;
  text-align: center;
  margin: v.$space-lg;

  h3 {
    margin: 0 0 v.$space-sm 0;
    font-size: v.$font-size-lg;
  }

  p {
    margin: 0;
    font-size: v.$font-size-sm;
    opacity: 0.8;
  }
}

.noData {
  text-align: center;
  color: v.$text-secondary;
  padding: v.$space-xl;
  font-style: italic;
  font-size: v.$font-size-sm;
}

/* ==========================================================================
   RESPONSIVE DESIGN OPTIMIZATIONS
   ========================================================================== */

@media (max-width: v.$screen-small-max) {
  .statsGrid,
  .tsStatsGrid {
    grid-template-columns: repeat(2, 1fr);
  }

  .goaltendingGrid {
    grid-template-columns: 1fr;
  }

  .goalieStatsGrid {
    grid-template-columns: repeat(2, 1fr);
  }

  .positionSummary,
  .quickStatsSummary {
    grid-template-columns: repeat(2, 1fr);
  }

  .cardHeader h3 {
    font-size: v.$font-size-sm;
  }

  .cardContent,
  .tsCardContent {
    padding: v.$space-xxs v.$space-sm;
  }
}

/* ==========================================================================
   ANIMATIONS
   ========================================================================== */

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.card,
.teamStatisticsCard {
  animation: slideIn 0.3s ease-out;
}

/* ==========================================================================
   UTILITY CLASSES
   ========================================================================== */

.excellent {
  color: v.$success-color !important;
}
.average {
  color: v.$warning-color !important;
}
.poor {
  color: v.$danger-color !important;
}
.positive {
  color: v.$success-color !important;
}
.negative {
  color: v.$danger-color !important;
}

// Ranking-based colors for consistency
@for $i from 1 through 10 {
  .rank-#{$i} {
    background: color-mix(
      in srgb,
      v.$success-color 20%,
      transparent 80%
    ) !important;
    color: v.$success-color !important;
  }
}

@for $i from 11 through 22 {
  .rank-#{$i} {
    background: color-mix(
      in srgb,
      v.$warning-color 20%,
      transparent 80%
    ) !important;
    color: v.$warning-color !important;
  }
}

@for $i from 23 through 32 {
  .rank-#{$i} {
    background: color-mix(
      in srgb,
      v.$danger-color 20%,
      transparent 80%
    ) !important;
    color: v.$danger-color !important;
  }
}
