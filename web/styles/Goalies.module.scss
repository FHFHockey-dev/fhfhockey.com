/* /styles/GoalieTrends.module.scss */
@use "sass:color";
@use "styles/vars" as v; // Import variables from vars.scss
@import url("https://fonts.googleapis.com/css2?family=Train+One&display=swap");
// Add other fonts if needed, e.g., Roboto Condensed for tables

/* =================== Main Page Layout =================== */

.pageContainer {
  @include v.component-wrapper; // Reuse wrapper mixin if available
  width: 95%; // Keep slightly wider than wigoCharts for potentially simpler layout
  max-width: 2000px; // Adjust max-width as needed
  min-width: 1000px; // Adjust min-width
  min-height: 90vh; // Adjust height
  margin: v.$space-lg auto v.$space-xxl auto;
  display: flex; // Use flex for the main container
  flex-direction: column; // Stack sections vertically
  border: 10px solid v.$border-color-primary; // Prominent border like wigo
  border-radius: v.$border-radius * 1.5; // Slightly less rounded than wigo
  outline: 15px solid darken(v.$background-dark, 2%); // Outline like wigo
  background-color: darken(v.$background-dark, 2%); // Main background
  overflow: hidden; // Prevent content spill
  padding: v.$space-lg; // Padding inside the main container
  gap: v.$space-lg; // Gap between direct children (header, controls, content)
}

/* =================== Section Wrappers =================== */
// Use wrappers for logical grouping and styling

.headerWrapper {
  // Similar to .headerRowWrapper but maybe simpler
  display: flex;
  justify-content: center;
  align-items: center;
  padding-bottom: v.$space-md;
  border-bottom: 8px double v.$primary-color; // Double border like wigo header items
  margin-bottom: v.$space-md; // Space below header
  width: 100%;
}

.controlsWrapper {
  display: flex;
  flex-direction: row; // Stack control sections vertically
  gap: v.$space-lg; // Gap between control sections
  width: 100%;
  background-color: darken(
    v.$background-dark,
    1%
  ); // Slightly different background
  border-radius: v.$border-radius;
  padding: v.$space-md;
  outline: 5px solid lighten(v.$background-dark, 3%); // Subtle outline
  border: 1px solid v.$border-color-secondary; // Thin border
}

.contentWrapper {
  flex-grow: 1; // Allow content to take remaining space
  display: flex; // Use flex to manage the table/leaderboard inside
  flex-direction: column;
  overflow: hidden; // Important for table scrolling later
  background-color: darken(
    v.$background-dark,
    1%
  ); // Background for the content area
  border-radius: v.$border-radius;
  padding: v.$space-sm; // Padding around the table/leaderboard
  outline: 5px solid lighten(v.$background-dark, 3%);
  border: 1px solid v.$border-color-secondary;
}

/* =================== Header Styling =================== */

.pageTitle {
  // Style the H1 like .wigoHeader .headerText
  font-family: "Train One", sans-serif;
  font-size: v.$font-size-base * 1.6; // Slightly smaller than wigo
  font-weight: 100;
  color: v.$text-color-primary;
  letter-spacing: 0.5em; // Less spacing than wigo
  text-align: center;
  text-transform: uppercase; // Added uppercase

  .spanColorBlue {
    // Replicate the blue span style
    display: inline-block;
    color: v.$primary-color;
    font-weight: 900; // Keep heavier weight
    font-family: inherit; // Inherit Train One
  }
}

.goalieRankingLeaderboardHeader {
  // Style the leaderboard header
  font-family: "Train One", sans-serif;
  font-size: v.$font-size-base * 1.4; // Slightly smaller than wigo
  font-weight: 100;
  color: v.$text-color-primary;
  letter-spacing: 0.7em; // Less spacing than wigo
  text-align: center;
  text-transform: uppercase; // Added uppercase
}

.spanColorBlue {
  // Replicate the blue span style
  display: inline-block;
  color: v.$primary-color;
  font-weight: 900; // Keep heavier weight
  font-family: inherit; // Inherit Train One
}

/* =================== Controls Styling =================== */

.controlsSection {
  // Wrapper for each group of controls (Toggle, Date, Stats, Fantasy)
  background-color: darken(
    v.$background-dark,
    0%
  ); // Slightly lighter than wrapper
  border-radius: v.$border-radius-sm;
  padding: v.$space-md;
  border: 1px solid v.$border-color-secondary;
  display: flex;
  flex-direction: column;
  gap: v.$space-md; // Gap within a control section
  width: 100%; // Full width of the controls wrapper
}

.sectionTitle {
  // Title for each control section
  font-size: v.$font-size-base * 0.9;
  font-weight: 700;
  color: v.$text-color-secondary;
  text-transform: uppercase;
  letter-spacing: 2px;
  padding-bottom: v.$space-sm;
  margin-bottom: v.$space-sm;
  border-bottom: 2px solid v.$primary-color; // Accent border
  text-align: center;
}

// --- Mode Toggles ---
.toggleContainer {
  display: flex;
  justify-content: center;
  flex-direction: column;
  gap: v.$space-md; // Use variable for gap
}

.toggleButton {
  @include v.button-style; // Use button mixin if available in vars
  background-color: darken(v.$background-dark, 10%);
  color: v.$text-color-button;
  border: 1px solid v.$border-color;
  padding: v.$space-sm v.$space-lg; // Use variables
  font-size: v.$font-size-base * 0.9;
  font-weight: 600; // Make slightly bolder
  border-radius: v.$border-radius-sm; // Consistent radius

  &:hover:not(:disabled) {
    background-color: darken(v.$background-dark, 5%);
    border-color: v.$primary-color;
    color: v.$primary-color;
  }

  &.active {
    background-color: v.$primary-color;
    color: v.$color-white; // Ensure white text on active
    border-color: darken(v.$primary-color, 10%);
    font-weight: 700;
  }
  &:disabled {
    // Style disabled state like wigoCharts
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// --- Date Selectors ---
.dateSelectorContainer {
  // Replaces .singleWeekDropdown, .weekRangeDropdowns
  display: flex;
  flex-direction: column; // Stack label and selects
  align-items: center; // Center items
  gap: v.$space-sm;
}

.rangeSelectContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
  gap: v.$space-sm; // Gap between start/end dropdowns
  width: 80%;
  flex-wrap: wrap; // Allow wrapping on smaller screens
}

.dropdownGroup {
  // Wrapper for label + select
  display: flex;
  align-items: center;

  gap: v.$space-sm;
  flex: 1 1 40%; // Allow growing/shrinking, basis 40%
  min-width: 250px; // Prevent excessive shrinking
  justify-content: space-between;
}

.selectLabel {
  // Style for "Start:", "End:", "Select Week:"
  color: v.$text-color-secondary;
  font-size: v.$font-size-small;
  font-weight: 600;
  white-space: nowrap;
}

.customSelect {
  // Style for the <select> element
  padding: v.$space-xs v.$space-sm; // Adjust padding
  border: 1px solid v.$border-color;
  border-radius: v.$border-radius-sm;
  background-color: darken(v.$background-dark, 10%);
  font-size: v.$font-size-base * 0.9;
  color: v.$text-color-primary; // Brighter text
  flex-grow: 1; // Allow select to take available space in dropdownGroup
  min-width: 100px;
  max-width: 250px; // Prevent excessive width
  cursor: pointer;

  &:hover {
    border-color: v.$primary-color;
  }
  &:focus {
    outline: 1px solid v.$primary-color;
    outline-offset: 1px;
    border-color: v.$primary-color;
  }
}

.selectorNote {
  // Replaces .singleWeekNote
  color: v.$text-color-secondary;
  font-size: v.$font-size-small;
  font-style: italic; // Italicize notes
  text-align: center;
  width: 100%;
  margin-top: v.$space-xs; // Small space above note

  .hyperlink {
    // Style link within note
    color: v.$primary-color;
    text-decoration: none;
    font-weight: 600;
    &:hover {
      text-decoration: underline;
    }
  }
}

// --- Stat Checkboxes ---
.checkboxContainer {
  display: grid; // Use grid for better alignment
  grid-template-columns: repeat(
    auto-fit,
    minmax(25%, 1fr)
  ); // Responsive columns
  gap: v.$space-sm v.$space-md; // Row and column gap
  justify-content: center;
  align-items: center; // Vertically align items in grid cells
}

.checkboxItem {
  // Individual checkbox + label container
  display: flex; // Align checkbox and label
  align-items: center;
  position: relative; // Needed for pseudo-elements

  input[type="checkbox"] {
    opacity: 0; // Hide actual checkbox
    position: absolute;
    width: 1px;
    height: 1px;

    &:focus + label::before {
      // Focus style like wigo inputs
      outline: 1px solid v.$primary-color;
      outline-offset: 1px;
      border-color: v.$primary-color;
    }

    & + label {
      // Label styling
      color: v.$text-color-primary;
      font-size: v.$font-size-small;
      padding-left: 28px; // Space for custom box
      cursor: pointer;
      position: relative; // Anchor for pseudo-elements
      user-select: none; // Prevent text selection on click

      &::before {
        // Custom checkbox box
        content: "";
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);
        width: 18px;
        height: 18px;
        border: 1px solid v.$border-color;
        background-color: darken(v.$background-dark, 10%);
        border-radius: v.$border-radius-sm; // Small radius
        transition:
          background-color 0.2s ease,
          border-color 0.2s ease;
      }

      &::after {
        // Custom checkmark
        content: "";
        position: absolute;
        left: 6px;
        top: 50%;
        width: 5px;
        height: 10px;
        border: solid v.$color-white; // Checkmark color
        border-width: 0 2px 2px 0;
        transform: translateY(-65%) rotate(45deg); // Center and rotate checkmark
        opacity: 0; // Hidden by default
        transition: opacity 0.2s ease;
      }
    }

    &:checked + label::before {
      // Checked box style
      background-color: v.$primary-color;
      border-color: darken(v.$primary-color, 10%);
    }

    &:checked + label::after {
      // Show checkmark when checked
      opacity: 1;
    }
  }
}

// --- Fantasy Settings ---
.fantasyInputGrid {
  display: grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(100px, 1fr)
  ); // Adjusted minmax
  gap: v.$space-sm v.$space-md; // Row and column gap
  justify-content: center;
  align-items: center; // Vertically align items in grid cells
}

.fantasyInputItem {
  display: flex;
  flex-direction: column; // Stack label/input
  align-items: center; // Center horizontally
  text-align: center; // Center label text

  label {
    color: v.$text-color-secondary;
    font-size: v.$font-size-small;
    font-weight: 600;
    margin-bottom: v.$space-xs; // Space below label
    text-transform: uppercase; // Uppercase labels
  }
}

.fantasyInput {
  // Style like other inputs
  padding: v.$space-xs;
  border: 1px solid v.$border-color;
  border-radius: v.$border-radius-sm;
  background-color: darken(v.$background-dark, 10%);
  color: v.$text-color-primary;
  width: 70px; // Slightly narrower
  text-align: center;
  font-size: v.$font-size-base * 0.9;
  -moz-appearance: textfield;
  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  &:focus {
    outline: 1px solid v.$primary-color;
    outline-offset: 1px;
    border-color: v.$primary-color;
  }
}

/* =================== Content Area Styling (Table/Leaderboard) =================== */

.backButton {
  // Style the "Back to Leaderboard" button
  @extend .toggleButton; // Inherit base toggle button styles
  margin-bottom: v.$space-md; // Space below button
  width: auto; // Don't force full width
  align-self: flex-start; // Align to the left
}

.tableScrollContainer {
  // Add a container for scrolling if tables get too wide/tall
  width: 100%;
  height: 100%; // Take height of contentWrapper
  overflow: auto; // Enable scrollbars as needed
  @include v.custom-scrollbar(
    v.$primary-color,
    v.$background-medium
  ); // Use scrollbar mixin if available
}

.dataTable {
  // Base styles for both GoalieTable and LeaderboardTable
  border-collapse: separate; // Use separate for spacing and radius
  border-spacing: 0;
  width: 100%;
  table-layout: fixed; // Use fixed layout
  font-family: v.$font-family-secondary; // Use secondary font (e.g., Roboto Condensed) if defined

  th.sortableHeader {
    // Target sortable headers
    cursor: pointer;
    user-select: none; // Prevent text selection on click

    &:hover {
      background-color: darken(v.$background-dark, 2%); // Subtle hover effect
      color: v.$primary-color; // Highlight text on hover
    }
  }

  .sortIndicator {
    display: inline-block; // Allow spacing
    margin-left: v.$space-xs; // Space indicator from text
    // Optional: Adjust vertical alignment if needed
    // vertical-align: middle;
  }

  th,
  td {
    padding: v.$space-xs v.$space-sm; // Use variables
    font-size: v.$font-size-small;
    font-weight: 400; // Normal weight for data
    vertical-align: middle;
    text-align: center; // Center align most cells
    overflow: hidden;
    text-overflow: ellipsis;
    border-bottom: 1px solid v.$border-color-secondary; // Thin bottom border for rows
    border-right: 1px solid v.$border-color-secondary; // Thin right border for columns
    background-color: darken(v.$background-light, 3%); // Base cell background
    color: v.$text-color-primary;

    &:first-child {
      border-left: none; // Remove leftmost border
      text-align: left; // Left-align first column (Name/Date)
      font-weight: 600; // Bolder first column
      padding-left: v.$space-md; // More padding on left
    }
    &:last-child {
      border-right: none; // Remove rightmost border
    }
  }

  // --- Header Styles ---
  thead {
    position: sticky;
    top: 0;
    z-index: 2; // Above scrolling content
    height: 60px; // Fixed height for header
    word-wrap: break-word;

    tr:first-child th {
      // Target top header row specifically
      border-top: none; // Remove top border on the very top header
      word-wrap: break-word;
    }
  }

  th {
    background-color: darken(v.$background-dark, 5%);
    color: v.$text-color-secondary;
    font-weight: 700; // Bold headers
    font-size: v.$font-size-small * 0.9;
    text-transform: uppercase; // Uppercase headers
    letter-spacing: 1px; // Add letter spacing
    border-bottom: 3px solid v.$primary-color; // Thick primary bottom border like wigo
    border-right-width: 0; // Remove right border between TH cells if desired
    border-left-width: 0;

    // Sticky first header cell needs specific adjustments if table scrolls horizontally
    &:first-child {
      position: sticky;
      left: 0;
      z-index: 3; // Above other headers
      background-color: darken(
        v.$background-dark,
        5%
      ); // Ensure bg covers content
      border-right: 1px solid v.$border-color; // Keep separator for sticky col
    }
  }

  // --- Body Styles ---
  tbody tr {
    &:nth-child(even) {
      td {
        background-color: darken(v.$background-light, 1%);
      }
    }
    &:nth-child(odd) {
      td {
        background-color: darken(v.$background-light, 3%);
      }
    }

    &:hover td {
      background-color: color.change(darken(v.$focus-color, 15%), $alpha: 0.3);
      color: v.$focus-color;
      font-weight: 600;
    }

    // Last row needs bottom border removed if table has outer border
    &:last-child td {
      border-bottom: none;
    }
  }

  // --- Average Row Specific Styling (If applicable, usually in thead) ---
  .averageHeader {
    font-weight: 600;
    font-style: italic;
    color: v.$text-color-secondary;
    background-color: darken(v.$background-dark, 2%);
  }
  .averageCell {
    font-weight: 600;
    color: v.$text-color-primary;
    background-color: darken(v.$background-dark, 2%);
  }

  // --- Integrate Existing Conditional Styles ---
  .better {
    background-color: rgba(
      v.$success-color,
      0.6
    ) !important; // Use success color variable with alpha
    color: v.$color-white;
    font-weight: 700;
  }

  .worse {
    background-color: rgba(
      v.$danger-color,
      0.6
    ) !important; // Use danger color variable with alpha
    color: v.$color-white;
    font-weight: 700;
  }

  .percentHigh {
    background-color: rgba(v.$success-color, 0.7) !important;
    color: v.$color-white;
    font-weight: 600;
  }

  .percentMedium {
    background-color: rgba(
      v.$warning-color,
      0.7
    ) !important; // Use warning color
    color: darken(v.$warning-color, 40%); // Darker text for yellow bg
    font-weight: 600;
  }

  .percentLow {
    background-color: rgba(v.$danger-color, 0.7) !important;
    color: v.$color-white;
    font-weight: 600;
  }

  // --- Leaderboard Specific Styles (If needed) ---
  // Example: Different width for rank column
  // .rankColumn { width: 50px; font-weight: bold; }
  // Example: Info icon styling
  .infoIcon {
    cursor: help;
    color: v.$text-color-secondary;
    font-size: v.$font-size-small * 0.8;
    margin-left: v.$space-xs;
  }
  .varianceNote {
    // Style the note below the leaderboard
    color: v.$text-color-secondary;
    font-size: v.$font-size-small;
    font-style: italic;
    text-align: center;
    margin-top: v.$space-md;
    padding: 0 v.$space-md;
  }
}

.standoutNote {
  // Style for "No rankings available" message
  color: v.$warning-color;
  font-size: v.$font-size-base;
  font-weight: 600;
  text-align: center;
  padding: v.$space-xl;
  background-color: rgba(v.$warning-color, 0.1);
  border: 1px solid rgba(v.$warning-color, 0.3);
  border-radius: v.$border-radius;
  margin: v.$space-lg;
}

/* --- Error Message Styling --- */
.errorText {
  color: v.$danger-color;
  font-weight: bold;
  text-align: center;
  padding: v.$space-md;
  background-color: rgba(v.$danger-color, 0.1);
  border: 1px solid rgba(v.$danger-color, 0.3);
  border-radius: v.$border-radius;
  margin: v.$space-md auto;
  width: 90%;
}

/* --- Loading Message Styling --- */
.loadingMessage {
  color: v.$text-color-secondary;
  font-style: italic;
  text-align: center;
  padding: v.$space-lg;
  font-size: v.$font-size-base;
}
