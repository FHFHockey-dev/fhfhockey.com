// styles/Home.module.scss
@use "styles/vars" as v;
@use "sass:color";

// breakpoints
$breakpoint-small: 320px;
$breakpoint-medium: 480px;
$breakpoint-large: 768px;
$mobile-fixed-width: 40px;
$mobile-column-short: 30px;

// mixin
@mixin respond-to($breakpoint) {
  @if $breakpoint == small {
    @media (max-width: $breakpoint-small) {
      @content;
    }
  } @else if $breakpoint == medium {
    @media (max-width: $breakpoint-medium) {
      @content;
    }
  } @else if $breakpoint == large {
    @media (max-width: $breakpoint-large) {
      @content;
    }
  }
}

// --- Main Page Layout ---
.homepage {
  // Use main container variables for consistency
  width: 95%; // Slightly wider for home page potentially
  max-width: 2200px;
  min-width: 1300px;
  margin: v.$space-xl auto; // Consistent vertical margin
  display: flex;
  flex-direction: column;
  gap: v.$space-xl * 1.5; // Slightly larger gap between main sections

  @media (max-width: #{v.$breakpoint-tablet - 1px}) {
    width: 95%;
    margin: v.$space-lg auto;
    gap: v.$space-xl;
  }
}

// --- Games Section ---
.gameCardsContainer {
  @include v.component-wrapper; // Apply consistent component frame
}

.gamesHeader {
  display: flex;
  align-items: stretch;
  justify-content: space-between;
  border-bottom: 2px solid v.$secondary-color;
  background-color: v.$background-dark;
  width: 100%; // Ensure it spans the wrapper
  position: relative;

  // Mobile adjustments if needed
  @media (max-width: #{v.$breakpoint-tablet - 1px}) {
    padding: 0;
    flex-direction: row;
    justify-content: center; // Center on mobile
  }
}

.headerAndDate {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: 0 v.$space-lg;

  @media (max-width: #{v.$breakpoint-tablet - 1px}) {
    padding: 0 v.$space-md;
    border-left: 2px solid v.$border-color;
    border-right: 2px solid v.$border-color;

    background: linear-gradient(
      135deg,
      v.$primary-color 0%,
      v.$primary-color 7%,

      v.$background-light 7%,
      v.$background-light 10%,

      v.$primary-color 10%,
      v.$primary-color 13%,

      v.$background-light 13%,
      v.$background-light 16%,

      v.$text-color-primary 16%,
      v.$text-color-primary 19%,

      v.$background-light 19%,
      v.$background-light 20%,

      v.$background-light 80%,
      v.$background-light 81%,

      v.$text-color-primary 81%,
      v.$text-color-primary 84%,

      v.$background-light 84%,
      v.$background-light 87%,

      v.$primary-color 87%,
      v.$primary-color 90%,

      v.$background-light 90%,
      v.$background-light 93%,

      v.$primary-color 93%,
      v.$primary-color 100%
    );
  }
}

.gamesHeader h1 {
  margin: 0;
  font-family: v.$font-family-primary;
  text-transform: uppercase;
  letter-spacing: 1.5px;
  font-weight: 100; // Lighter weight
  font-size: clamp(1.8rem, 4vw, 2.2rem); // Responsive title size
  line-height: 1.2; // Adjust line height
  color: v.$text-color-primary;
  padding: v.$space-sm 0; // Space around title

  span {
    color: v.$secondary-color; // Use variable
    font-weight: 100; // Match title weight
  }

  @media (max-width: #{v.$breakpoint-tablet - 1px}) {
    padding: v.$space-xs 0 0 0;
    font-size: clamp(1.3rem, 4vw, 1.8rem); // Slightly smaller on mobile
  }
}

.dateDisplay {
  color: v.$text-color-secondary; // Lighter color for date
  font-family: v.$font-family-primary;
  font-size: v.$font-size-small * 0.9; // Smaller date font
  text-align: center;
  margin-top: v.$space-xs; // Space below title
  margin-bottom: 0;
  padding: 0 0 v.$space-lg 0; // Consistent padding

  @media (max-width: #{v.$breakpoint-tablet - 1px}) {
    font-size: v.$font-size-small * 0.8; // Adjust for mobile
    margin-top: v.$space-xs;
    padding: 0 0 v.$space-sm 0; // Adjust padding for mobile
  }
}

// --- Specific Button Styles for Games Header ---
.gamesHeader button {
  @include v.button-style;
  flex-shrink: 0;
  min-width: 50px;
  width: 60px;
  height: auto;
  padding: 0;
  border: none;
  border-radius: 0;
  font-size: 1.5rem;
  line-height: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  color: v.$primary-color; // Arrow color
  background-color: v.$background-medium; // button background
  transition: background-color v.$transition-duration v.$transition-easing;

  &:hover {
    background-color: v.$secondary-color; // Change background on hover
    color: v.$text-color-primary;
    border: none; // Ensure no border appears on hover
    filter: none; // Remove inherited filter if any
  }

  &:focus-visible {
    outline: 2px solid v.$text-color-primary;
    outline-offset: -2px; // Adjust focus outline inward
    z-index: 1; // Ensure focus outline is visible
  }

  // Add arrow content using pseudo-elements
  // Clear existing button text in TSX first!
  &[aria-label="Previous Day"]::before {
    content: "<";
  }
  &[aria-label="Next Day"]::before {
    content: ">";
  }

  // Adjustments for first/last child if needed (e.g., rounding corners with container)
  &:first-child {
    border-top-left-radius: v.$border-radius; // Example if needed
  }
  &:last-child {
    border-top-right-radius: v.$border-radius; // Example if needed
  }

  @media (max-width: #{v.$breakpoint-tablet - 1px}) {
    min-width: 45px;
    max-width: 45px;
    padding: v.$space-xs v.$space-sm; // Smaller button padding
    font-size: 1rem; // Smaller icon size

    &:first-child {
      border-top-left-radius: v.$border-radius-sm; // Example if needed
    }

    &:last-child {
      border-top-right-radius: v.$border-radius-sm; // Example if needed
    }
  }
}

.gamesContainer {
  display: grid;
  grid-template-columns: repeat(1, 1fr); // Default: 1 column
  gap: v.$space-md;
  padding: v.$space-lg;
  border-left: v.$background-light;
  border-right: v.$background-light;
  border-bottom: v.$background-light;
  border-top: none;

  @media (min-width: v.$breakpoint-tablet) {
    grid-template-columns: repeat(2, 1fr); // 2 columns on tablet
    gap: v.$space-xl;
    padding: v.$space-xl;
  }

  @media (min-width: v.$breakpoint-desktop) {
    grid-template-columns: repeat(3, 1fr); // 3 columns on desktop
  }

  // --- Centering Logic using Flexbox Fallback ---
  // Apply flex properties to center the items
  display: flex;
  flex-wrap: wrap;
  justify-content: center;

  > * {
    // --- Adjust grid item styles for Flexbox ---
    width: 100%; // Let flex-basis control width primarily
    max-width: 450px;
    margin: 0 auto v.$space-lg auto;

    flex-basis: 100%; // Default: 1 column (mobile)

    @media (min-width: v.$breakpoint-tablet) {
      // Roughly 2 columns (minus gap)
      flex-basis: calc(
        50% - #{v.$space-xl / 2}
      ); // Adjust basis for 2 columns + gap
      margin-bottom: v.$space-xl;
    }

    @media (min-width: v.$breakpoint-desktop) {
      // Roughly 3 columns (minus gap)
      flex-basis: calc(
        33.333% - #{v.$space-lg * (2 / 3)}
      ); // Adjust basis for 3 columns + gap
      margin-bottom: v.$space-lg; // Match grid gap
    }
  }
}

.gameLink {
  text-decoration: none;
  color: inherit;
  display: block; // Ensure link takes up block space for layout
  transition: transform 0.2s v.$transition-easing; // Add subtle hover effect

  &:hover {
    transform: translateY(-3px); // Lift card slightly on hover
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3); // Enhance shadow on hover
  }
  &:focus-visible {
    outline: 2px solid v.$focus-color;
    outline-offset: 3px;
    border-radius: v.$border-radius-sm; // Match card radius
  }

  @media (max-width: #{v.$breakpoint-tablet - 1px}) {
    margin-bottom: v.$space-xs;

    &:hover {
      transform: translateY(0); // Remove hover effect on mobile
      box-shadow: none; // Remove shadow on hover
    }
  }
}

.combinedGameCard {
  display: flex;
  flex-direction: row;
  background-color: v.$background-medium;
  align-items: stretch;
  justify-content: space-between;
  border: 1px solid v.$border-color-primary;
  border-radius: v.$border-radius-sm;
  overflow: hidden;
  color: v.$text-color-primary;
  min-height: 80px; // Keep min-height
  position: relative;
}

// Team Logo Sections (Home/Away)
.homeTeamLogo,
.awayTeamLogo {
  flex: 0 0 75px;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: v.$space-xs;
  position: relative;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
  }
}

.homeTeamLogo::before {
  background-color: var(--home-primary-color);
  border-right: 1px solid v.$border-color-primary;
}

.awayTeamLogo::before {
  background-color: var(--away-primary-color);
  border-left: 1px solid v.$border-color-primary;
}

.leftImage,
.rightImage {
  max-width: 70px;
  max-height: 70px;
  height: auto;
  filter: drop-shadow(0 0 5px rgba(255, 255, 255, 0.5));
  position: relative;
  z-index: 1;
}

// Middle Game Info Section
.gameTimeSection {
  flex-grow: 1;
  display: flex;
  justify-content: space-around;
  align-items: center;
  padding: 0 v.$space-sm;
  // height: 100%; // Implicit with align-items: stretch
  background: linear-gradient(
    135deg,
    var(--home-primary-color) 0%,
    var(--home-primary-color) 7%,
    var(--home-secondary-color) 7%,
    var(--home-secondary-color) 10%,
    var(--home-primary-color) 10%,
    var(--home-primary-color) 13%,
    var(--home-secondary-color) 13%,
    var(--home-secondary-color) 16%,

    v.$text-color-primary 16%,
    // Use variable for white
    v.$text-color-primary 19%,
    // Use variable for white
    var(--home-jersey-color) 19%,
    var(--home-jersey-color) 20%,
    v.$background-light 20%,
    // Use variable for middle background
    v.$background-light 80%,
    // Use variable for middle background
    var(--away-jersey-color) 80%,
    var(--away-jersey-color) 81%,
    v.$text-color-primary 81%,
    // Use variable for white
    v.$text-color-primary 84%,

    // Use variable for white
    var(--away-secondary-color) 84%,
    var(--away-secondary-color) 87%,
    var(--away-primary-color) 87%,
    var(--away-primary-color) 90%,
    var(--away-secondary-color) 90%,
    var(--away-secondary-color) 93%,
    var(--away-primary-color) 93%,
    var(--away-primary-color) 100%
  );
}

.homeScore,
.awayScore {
  flex: 1; // Allow scores to take space
  text-align: center;
  color: v.$text-color-primary;
  font-size: 1.8rem; // Larger score font
  font-family: v.$font-family-primary;
  font-weight: 600; // Bold score
  line-height: 1;
}

.gameTimeInfo {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 0 v.$space-xs; // Small padding around time/status
  flex-shrink: 0; // Prevent shrinking
}

.gameState,
.gameTimeText {
  font-family: v.$font-family-primary;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-style: normal;
  white-space: nowrap;
  line-height: 1.3;
}

.gameState {
  font-weight: 600;
  color: v.$secondary-color; // Use accent color for status
  font-size: 0.7rem;
}

.gameTimeText {
  font-weight: 400;
  color: v.$text-color-secondary; // Lighter color for time
  font-size: 0.8rem;
}

// --- Standings & Injuries Section ---
.standingsInjuriesContainer {
  display: flex;
  flex-direction: column;
  gap: v.$space-xl; // Default gap for mobile stacking

  @media (min-width: v.$breakpoint-desktop) {
    flex-direction: row;
    align-items: flex-start;
    // *** INCREASE gap for desktop view ***
    gap: v.$space-xxxl; // Use a larger gap variable
    // gap: v.$space-xl; // REMOVE or comment out
  }
}
.standingsContainer,
.injuriesContainer {
  @include v.component-wrapper; // Consistent wrapper
  flex: 1; // Allow them to share space equally on desktop
  display: flex; // Use flex internally
  flex-direction: column; // Stack header and table
  min-width: 0; // Prevent flex overflow issues
}

.standingsHeader,
.injuriesHeader {
  // Similar styling to .gamesHeader
  padding: v.$space-md v.$space-lg;
  border-bottom: 2px solid v.$secondary-color;
  background-color: v.$background-dark;
  flex-shrink: 0; // Prevent header from shrinking

  h1 {
    margin: 0;
    font-family: v.$font-family-primary;
    text-transform: uppercase;
    letter-spacing: 1.5px;
    font-weight: 100;
    font-size: clamp(
      1.6rem,
      3vw,
      2rem
    ); // Slightly smaller header for these sections
    line-height: 1.2;
    color: v.$text-color-primary;
    text-align: left;

    span {
      color: v.$secondary-color;
      font-weight: 100;
    }
  }
}

.tableWrapper {
  // Add a wrapper for scrolling within the component
  overflow-x: auto;
  flex-grow: 1; // Allow wrapper to fill remaining space
  -webkit-overflow-scrolling: touch;

  // Hide scrollbar visually
  &::-webkit-scrollbar {
    display: none;
  }
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

// --- Table Styling (Standings & Injuries) ---
.standingsTable,
.injuryTable {
  @include v.table-base; // Use base table mixin (removes need for direct border/radius)
  border: none; // Remove border from mixin if wrapper provides it
  width: 100%;
  margin-top: 0; // Remove margin if padding is handled by wrapper/header
  background-color: transparent; // Let tbody rows handle background

  thead {
    position: sticky;
    top: 0;
    z-index: 2;
    background-color: v.$background-dark; // Ensure sticky header has background

    th {
      background-color: v.$background-dark; // Cell background
      color: v.$text-color-secondary; // Header text color
      font-weight: 600;
      font-family: v.$font-family-primary;
      font-size: 11px; // Match GameGrid header
      padding: v.$space-sm v.$space-md; // Consistent padding
      text-align: center;
      border-bottom: 2px solid v.$secondary-color; // Consistent separator
      border-right: v.$border-subtle; // Subtle vertical separators
      text-transform: uppercase;
      letter-spacing: 0.5px;
      white-space: nowrap;

      &:first-child {
        text-align: left;
        padding-left: v.$space-lg; // Indent first column header
        border-left: none; // No left border on first header
      }
      &:last-child {
        border-right: none; // No right border on last header
      }
    }
  }

  tbody {
    tr {
      transition: background-color v.$transition-duration v.$transition-easing;
      border-bottom: v.$border-subtle; // Use subtle separator between rows

      &:last-child {
        border-bottom: none; // No border below last row
      }

      &:nth-child(even) {
        background-color: v.$background-light;
      }
      &:nth-child(odd) {
        background-color: v.$background-dark;
      }

      &:hover {
        background-color: color.scale(
          v.$primary-color,
          $lightness: -30%,
          $alpha: -70%
        );
      }
    }

    td {
      padding: v.$space-sm v.$space-md; // Consistent padding
      border-right: v.$border-subtle; // Subtle vertical separators
      vertical-align: middle;
      font-size: v.$font-size-small; // Consistent cell font size

      &:first-child {
        border-left: none; // No left border on first cell
        padding-left: v.$space-lg; // Indent first column data
      }
      &:last-child {
        border-right: none; // No right border on last cell
      }
    }
  }
}

// --- Standings Table Specifics ---
.standingsTable {
  // Use fixed layout for predictable columns
  table-layout: fixed;

  th:nth-child(1), // Rank
  td:nth-child(1) {
    width: 10%;
    text-align: center;
    padding-left: v.$space-md;
  }

  th:nth-child(2), // Team
  td:nth-child(2) {
    width: 50%;
    text-align: left;
    padding-left: v.$space-lg;
  }

  th:nth-child(3), // Record
  td:nth-child(3) {
    width: 20%;
    text-align: center;
  }

  th:nth-child(4), // Points
  td:nth-child(4) {
    width: 20%;
    text-align: center;
    padding-right: v.$space-md;
  }

  .standingsTeamLogo {
    height: 25px;
    width: 25px; // Explicit width
    vertical-align: middle; // Align logo nicely with text
    margin-right: v.$space-sm; // Space between logo and name
    display: inline-block; // Needed for vertical-align
    filter: drop-shadow(0 0 1px rgba(255, 255, 255, 0.3));
  }

  .standingsTeamNameSpan {
    // Style the name span if needed, but often default is fine
    vertical-align: middle;
  }
}

// --- Injuries Table Specifics ---
.injuryTable {
  table-layout: auto;

  th.teamColumn, // Target header as well
  td.teamColumn {
    width: 15%; // Increase width slightly
    text-align: center;
    // Add specific padding if needed around logo+text
    padding-left: v.$space-sm;
    padding-right: v.$space-sm;
  }

  // Style for the logo within the injury table cell
  .injuryTeamLogo {
    height: 25px; // Match standings logo size
    width: 25px; // Match standings logo size
    vertical-align: middle;
    margin-right: v.$space-sm;
    display: inline-block;
    filter: drop-shadow(0 0 1px rgba(255, 255, 255, 0.3));
  }
  .injuryTeamNameSpan {
    // If you wrap the team name
    vertical-align: middle;
  }

  .dateColumn {
    width: 15%;
    white-space: nowrap;
  }
  // Adjust other column widths if needed due to team column change
  .nameColumn {
    width: 25%;
  }
  .statusColumn {
    width: 15%;
    text-align: center;
  }
  .descriptionColumn {
    width: 30%;
  } // Reduced slightly

  td.dateColumn {
    font-size: v.$font-size-small * 0.9;
    color: v.$text-color-secondary;
  }
  td.statusColumn {
    font-weight: 600;
  }
}

.pagination {
  display: flex;
  justify-content: space-between; // Push buttons apart
  align-items: center;
  padding: v.$space-md v.$space-lg; // Consistent padding
  border-top: 1px solid v.$border-color-primary; // Separator line above pagination
  flex-shrink: 0; // Prevent shrinking

  button {
    @include v.button-style; // Apply standard button style
    min-width: 100px; // Ensure decent button width
    padding: v.$space-sm v.$space-lg;
  }
}

// --- Chart Container ---
.chartContainer {
  // Add a class for the chart wrapper if needed
  @include v.component-wrapper;
  padding: v.$space-lg; // Add padding inside the chart wrapper

  @media (max-width: #{v.$breakpoint-tablet - 1px}) {
    display: none; // Hide the chart container on smaller screens
  }
}

// --- General Cleanup ---
.separator {
  // Remove this if not needed, headers provide separation now
  display: none;
}

.socialMedia {
  // Keep this rule if needed for mobile banner
  @media only screen and (min-width: v.$breakpoint-desktop) {
    display: none;
  }
}

.container {
  // Keep base page padding if needed, but mainGridContainer handles margins
  padding: 0;
}

// --- Mobile Overrides ---
@media (max-width: #{v.$breakpoint-tablet - 1px}) {
  .homepage {
    gap: v.$space-xl; // Adjust gap for mobile
  }

  .gamesHeader button {
    min-width: 35px;
    padding: v.$space-xs v.$space-sm; // Smaller button padding
    font-size: 1rem; // Smaller icon size
  }

  .gamesContainer {
    gap: v.$space-md;
    padding: v.$space-md;
  }

  .combinedGameCard {
    min-height: 70px; // Slightly smaller cards
  }
  .homeTeamLogo,
  .awayTeamLogo {
    flex-basis: 55px;
  } // Adjust logo width
  .leftImage,
  .rightImage {
    max-width: 30px;
    max-height: 30px;
  }
  .homeScore,
  .awayScore {
    font-size: 1.5rem;
  }
  .gameState {
    font-size: 0.65rem;
  }
  .gameTimeText {
    font-size: 0.75rem;
  }

  .standingsInjuriesContainer {
    gap: v.$space-xl;
  }

  .standingsHeader h1,
  .injuriesHeader h1 {
    font-size: clamp(1.4rem, 4vw, 1.8rem);
    padding: v.$space-sm v.$space-md;
  }

  // Reduce table font sizes and padding for mobile
  .standingsTable,
  .injuryTable {
    thead th {
      font-size: 10px;
      padding: v.$space-sm v.$space-sm;
    }
    tbody td {
      font-size: 12px;
      padding: v.$space-sm v.$space-sm;

      &:first-child {
        padding-left: v.$space-md;
      }
    }
  }

  .standingsTable {
    // Mobile column widths
    th:nth-child(1),
    td:nth-child(1) {
      width: 15%;
    } // Rank
    th:nth-child(2),
    td:nth-child(2) {
      width: 45%;
    } // Team
    th:nth-child(3),
    td:nth-child(3) {
      width: 20%;
    } // Record
    th:nth-child(4),
    td:nth-child(4) {
      width: 20%;
    } // Points

    .standingsTeamLogo {
      width: 20px;
      height: 20px;
      margin-right: v.$space-xs;
    }
  }

  .injuryTable {
    // Allow auto layout on mobile or adjust widths
    table-layout: auto;
    .dateColumn,
    .teamColumn,
    .nameColumn,
    .statusColumn,
    .descriptionColumn {
      width: auto; // Let browser decide widths
      white-space: normal; // Allow wrapping
    }
    td.dateColumn {
      white-space: nowrap;
    }
  }

  .pagination {
    padding: v.$space-sm v.$space-md;
    button {
      min-width: 80px;
      padding: v.$space-xs v.$space-sm;
    }
  }
}
