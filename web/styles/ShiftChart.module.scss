// styles/ShiftChart.module.scss
@use "styles/vars" as v; // Use the alias
@use "sass:color";
@use "sass:math";

/* Main container for the shift chart page */
.shiftChartPageContainer {
  // Renamed for clarity
  width: 95%; // Use consistent width like other pages
  max-width: 1800px; // Allow slightly wider for this chart potentially
  margin: v.$space-xl auto;
  display: flex;
  flex-direction: column;
  gap: v.$space-xl; // Consistent gap between sections
}

/* Container for the top controls (dropdowns) */
.controlsContainer {
  @include v.component-wrapper;
  padding: v.$space-lg;
  display: flex;
  flex-direction: column; // Always stack vertically
  gap: v.$space-lg;
  align-items: center; // Center items
}

/* Style for individual dropdown groups */
.shiftChartDropdown {
  display: flex;
  flex-direction: column; // Stack label above select
  align-items: flex-start; // Align label left
  gap: v.$space-xs;
  width: 100%; // Full width on mobile
  max-width: 250px; // Max width for dropdowns

  @media (min-width: v.$breakpoint-tablet) {
    width: auto; // Allow natural width on larger screens
    align-items: center; // Center label/select group horizontally
  }

  label {
    font-family: v.$font-family-primary;
    font-size: v.$font-size-small;
    color: v.$text-color-secondary;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    padding-left: v.$space-xs; // Slight indent for label
  }

  select,
  input[type="date"] {
    // Modern input/select styling
    appearance: none;
    background-color: v.$background-light;
    border: 1px solid v.$border-color-secondary;
    border-radius: v.$border-radius-sm;
    padding: v.$space-sm v.$space-md; // Consistent padding
    font-size: v.$font-size-small;
    color: v.$text-color-primary;
    cursor: pointer;
    width: 100%; // Full width within its group
    font-family: v.$font-family-primary;

    &:focus {
      outline: none;
      border-color: v.$primary-color;
      box-shadow: 0 0 0 2px rgba(v.$primary-color, 0.3);
    }
  }

  select {
    // Add dropdown arrow
    background-image:
      linear-gradient(45deg, transparent 50%, v.$text-color-secondary 50%),
      linear-gradient(135deg, v.$text-color-secondary 50%, transparent 50%);
    background-position:
      calc(100% - #{v.$space-lg}) center,
      calc(100% - #{v.$space-md}) center;
    background-size:
      5px 5px,
      5px 5px;
    background-repeat: no-repeat;
    padding-right: v.$space-xl * 1.5; // Ensure space for arrow
  }
}

/* Container specifically for the table and its related elements */
.shiftChartTableContainer {
  background: v.$background-medium;
  padding: v.$space-sm;
  width: 100%;
  height: 100%;
  min-height: 900px;
  max-height: 900px;
  display: flex; // Use flex to manage internal structure
  flex-direction: column; // Stack header and scrolling table area
  // height: 70vh; // Example: Set a max height for vertical scrolling if needed
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  overflow-x: auto;
}

.tableScrollWrapper {
  border: 2px solid v.$border-color-primary;
  border-radius: v.$border-radius-md;
  width: 100%;
  overflow-x: auto;
  flex-grow: 1;
  position: relative;
  // Hide scrollbar visually
  &::-webkit-scrollbar {
    display: none;
  }
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.shiftChartTable {
  border-collapse: collapse;
  color: v.$text-color-primary;
  font-family: v.$font-family-primary;
  width: 100%;
  height: 100%;
  min-width: 1200px;
  min-height: 880px;
  table-layout: fixed;
  overflow: hidden;
  border-spacing: 0;
}

/* --- Table Header --- */
.shiftChartTable thead {
  position: sticky;
  // top: 0; // Stick to the top of .tableScrollWrapper
  border-top-left-radius: v.$border-radius-md;
  border-top-right-radius: v.$border-radius-md;
}

.shiftChartTable th {
  background-color: v.$background-dark; // Consistent header background
  color: v.$text-color-secondary;
  font-weight: 600;
  font-size: 10px; // Smaller header font
  padding: v.$space-sm v.$space-xs; // Adjust padding
  text-align: center;
  border-bottom: 2px solid v.$secondary-color; // Consistent separator
  border-right: v.$border-subtle;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  white-space: nowrap;
  vertical-align: middle; // Center content vertically

  &:last-child {
    border-right: none;
  }
}

// Header: Game Info (Player/Pos) Column
.gameInfoHeader {
  width: 15%; // Allocate width for Player + Pos
  min-width: 180px; // Ensure enough space
  text-align: left !important; // Override general center align
  position: sticky;
  left: 0; // Stick to the left
  background-color: v.$background-dark; // Ensure background for sticky
  border-right: v.$border-separator; // Prominent separator
}

// Header: Period/OT Columns
.timestampPeriod,
.timestampOvertime {
  position: relative; // Needed for absolute positioning of labels inside later
  text-align: center !important;
}
// --- Column Width Calculation ---
// Total time units: (3 periods * 20 mins) + (1 OT * 5 mins) = 65 units for relative width
// If NOT overtime, total is 60 units. We'll use CSS variables set by JS later if possible,
// but for now, use percentages based on a common case (OT).
$total-time-units-ot: 65;
$total-time-units-reg: 60;
$period-units: 20;
$ot-units: 5;

.timestampPeriod {
  width: calc(
    100% * #{$period-units} / #{$total-time-units-ot}
  ); // Approx 30.7%
  min-width: 250px; // Ensure minimum width per period
}
.timestampOvertime {
  width: calc(100% * #{$ot-units} / #{$total-time-units-ot}); // Approx 7.7%
  min-width: 80px;
}

/* --- Table Body --- */
.shiftChartTable tbody {
  font-size: 11px; // Smaller font for body
  text-transform: uppercase;
}

.playerRow {
  transition:
    filter v.$transition-duration v.$transition-easing,
    background-color v.$transition-duration v.$transition-easing; // Add filter to transition
  border-bottom: v.$border-subtle; // Row separator
  color: var(--player-color, inherit);
  background: var(--player-bg, inherit);
  font-weight: var(--player-weight, 400);
  font-stretch: var(--player-stretch, normal);
  letter-spacing: var(--player-spacing, normal);

  &:last-child {
    border-bottom: none;
  }
  // Base alternating backgrounds (examples, use your actual colors)
  &:nth-child(even) {
    // background-color: v.$background-light;
  }
  &:nth-child(odd) {
    // background-color: v.$background-dark;
  }

  &:hover {
    // Keep hover effect as is, it should work fine over the filtered cells
    td {
      background-color: color.scale(
        v.$primary-color,
        $lightness: -20%,
        $alpha: -80%
      ) !important;
      &:first-child,
      &:nth-child(2) {
        background-color: inherit !important;
      }
    }
  }

  // --- >>> NEW STYLES FOR INACTIVE ROWS (Filter Approach) <<< ---
  &.inactivePlayer {
    // Apply a brightness filter to the entire row to dim it
    filter: brightness(
      50%
    ); // Adjust percentage (e.g., 70% = darker, 100% = normal)

    // Optional: Slightly desaturate inactive rows as well for clearer distinction
    // filter: brightness(70%) saturate(80%);

    // Ensure text contrast remains acceptable - you might need to adjust text color slightly if filter makes it too hard to read
    // For example:
    // td { // Target all cells in inactive row
    //   color: color.adjust(v.$text-color-primary, $lightness: 10%) !important; // Slightly lighten text to compensate (use !important cautiously)
    // }
  }
  // --- >>> END OF NEW STYLES <<< ---
}

.shiftChartTable td {
  table-layout: fixed;
  width: 100%;
  padding: v.$space-xxs v.$space-xxs * 0.5;
  vertical-align: middle;
  border-right: v.$border-subtle;
  height: 16px;
  &:last-child {
    border-right: none;
  }
}

// Player Name & Position Cells (Sticky)
.playerNameCell,
.playerPositionCell {
  position: sticky;
  left: 0;
  padding: v.$space-xxs v.$space-xs;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  background-color: inherit;
  color: var(--player-color, inherit);
  background: var(--player-bg, inherit);
}

.playerNameCell {
  width: 100%;
  min-width: 120px;
  border-right: v.$border-subtle;
  font-weight: 500;
  text-align: left;
}

.playerPositionCell {
  width: 5%;
  min-width: 60px;
  text-align: center;
  font-weight: 300;
  color: v.$text-color-secondary;
  left: 120px;
  border-right: v.$border-separator;
  background: var(--player-position-bg, inherit);
}

.playerNameText {
  transition: opacity v.$transition-duration v.$transition-easing;
  padding-left: 10px;
}
.inactivePlayerText {
  opacity: 0.6; // Style for inactive player names
}

// Shift Blocks Cell
.shiftBlocksCell {
  padding: 1px 0;
  position: relative;
  background: var(--shift-block-bg, inherit);

  // Central white line (visual guide)
  &::before {
    content: "";
    position: absolute;
    left: 0; // Stretch across cell
    right: 0;
    height: 1px;
    background-color: rgba(v.$text-color-primary, 0.45); // Faint white line
    top: 50%;
    transform: translateY(-50%);
    z-index: 0; // Behind shift blocks
  }
}
.overtimeCell {
  border-right: none; // No line after OT
}

.shiftBlock {
  position: absolute;
  background: var(--shift-bg, #000);
  width: var(--shift-width, 0);
  left: var(--shift-left, 0);
  border: var(--shift-border, none);
  border-radius: 0px;
  top: 1px;
  bottom: 1px;
  height: auto;
  min-width: 1px;
  z-index: 1;
  cursor: help;
  box-shadow: inset 0 0 1px rgba(0, 0, 0, 0.5);
}

/* --- Timestamp Bar / Game Score --- */
.timeStampRow {
  // New class for the timestamp row specifically
  height: 40px; // Give timestamp row more height
}

.gameScoreCell {
  text-align: center;
  font-weight: bold;
  font-size: v.$font-size-base;
  position: sticky;
  left: 0; // Stick score cell
  background-color: v.$background-dark; // Match header background
  border-right: v.$border-separator; // Match player name border
  padding: v.$space-sm;
}

.timestampsBar {
  cursor: pointer;
  background-color: v.$background-medium; // Background for the bar
  position: relative; // Context for labels, line, indicators
  border-right: v.$border-subtle;
  &:last-child {
    border-right: none;
  }

  // Brighter background overlay indicating selected time
  &::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: var(--bright-width, 0%); // Controlled by JS
    height: 100%;
    background: rgba(v.$text-color-primary, 0.1); // Faint overlay
    transition: width 0.1s linear; // Faster, linear transition
    pointer-events: none; // Don't interfere with clicks
    z-index: 1;
  }
}

.timestampLabel {
  position: absolute;
  left: var(--left, 0);
  bottom: 2px;
  transform: translateX(-50%);
  white-space: nowrap;
  font-size: 9px;
  color: v.$text-color-secondary;
  z-index: 2;
}

.yellowLine {
  position: absolute;
  left: var(--left, 0);
  top: 0;
  bottom: 0;
  background-color: v.$focus-color;
  width: 2px;
  height: 100%;
  pointer-events: none;
  z-index: 3;
  box-shadow: 0 0 3px v.$focus-color;
}

// --- Team Header Rows ---
.teamHeaderRowHome,
.teamHeaderRowAway {
  position: sticky;
  left: 0; // Stick the entire row conceptually
  z-index: 1; // Below player name/pos sticky but above regular cells
  background: var(--team-header-bg, inherit);
  color: var(--team-header-text, inherit);
  border-color: var(--team-header-border, inherit);
}

.teamHeaderCellHome,
.teamHeaderCellAway {
  background: var(--team-header-cell-bg, inherit);
  border-right: var(--team-header-cell-border, none);
  color: var(--team-header-text-color);
  font-family: v.$font-family-accent;
  font-weight: 900;
  font-size: 1rem; // Slightly smaller than before
  text-align: left;
  padding: v.$space-xxs v.$space-lg !important; // Consistent padding
  // Remove borders set inline, use classes or td borders
  border-top: none;
  border-bottom: 1px solid v.$border-color-primary; // Bottom separator
  left: 0;
}

/* Remove double borders from pseudo-elements if not needed */
// .teamHeaderCellAway::before, .teamHeaderCellHome::before { display: none; }

// Linemate Matrix container styling
.linemateMatrixContainer {
  // Add a class to the div wrapping LinemateMatrix
  @include v.component-wrapper;
  margin-top: v.$space-xl; // Add space above matrix
}

// --- Mobile Overrides ---
@media (max-width: #{v.$breakpoint-tablet - 1px}) {
  .shiftChartPageContainer {
    width: 100%;
    margin: v.$space-md 0; // Less margin on mobile
    gap: v.$space-lg;
  }
  .controlsContainer {
    padding: v.$space-md;
    gap: v.$space-md;
  }
  .shiftChartDropdown {
    max-width: none;
  } // Allow full width on mobile

  .gameInfoHeader {
    width: 35%;
    min-width: 130px;
  } // Adjust sticky header width
  .playerNameCell {
    width: 25%;
    min-width: 90px;
  }
  .playerPositionCell {
    width: 10%;
    min-width: 40px;
    left: 90px;
  } // Adjust position sticky offset

  .shiftChartTable {
    width: 400%;
    min-width: 800px;
  } // Increase width more for mobile scroll

  .shiftChartTable th {
    font-size: 9px;
    padding: v.$space-xs;
  }
  .shiftChartTable tbody {
    font-size: 10px;
  }
  .shiftChartTable td {
    height: 24px;
  } // Shorter rows on mobile

  .pagination button {
    min-width: 80px;
    padding: v.$space-xs v.$space-sm;
  }
}

.shiftChartPageOuterGrid {
  display: grid;
  grid-template-columns: 11fr 4fr;
  gap: v.$space-xl;
  width: 95vw;
  margin: 0 auto;
  margin-top: v.$space-xl;
  margin-bottom: v.$space-xl;
  min-height: 100vh;
  // background: v.$background-dark;
  @media only screen and (max-width: v.$screen-medium-max) {
    grid-template-columns: 1fr;
  }
}

.shiftChartMainColumn {
  border: 5px solid v.$border-color-primary;
  border-radius: v.$border-radius * 2;
  outline: 5px solid color.adjust(v.$background-dark, $lightness: -2%);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  min-height: 1232px;
  max-height: 1232px;
}

.controlsContainerModernCard {
  background: v.$background-medium;
  border-radius: v.$border-radius;
  box-shadow: 0 2px 16px rgba(0, 0, 0, 0.08);
  padding: v.$space-xl;
  display: flex;
  flex-direction: column;
  gap: v.$space-lg;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}

.activePlayersListCard {
  border: 5px solid v.$border-color-primary;
  border-radius: v.$border-radius * 2;
  outline: 5px solid color.adjust(v.$background-dark, $lightness: 0%);
  overflow: hidden;
  background: v.$background-dark;
  border-radius: v.$border-radius-md;
  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.06);
  padding: v.$space-lg;

  h4 {
    margin-bottom: v.$space-xs;
    margin-top: 0;
  }
}

.activePlayersListGrid {
  display: flex;
  flex-direction: row;
  gap: v.$space-lg;
  justify-content: space-between;
}

.activePlayersTeamBorderedRow {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  margin-bottom: 0.5em;
  position: relative;
  height: 1.6em; // match header height
}
.teamBorderLine {
  flex: 1;
  height: 1.2px;
  background: linear-gradient(
    90deg,
    transparent 10%,
    v.$primary-color 50%,
    transparent 90%
  );
  opacity: 0.5;
  margin: 0 0.5em;
  position: relative;
  top: 0;
}
.activePlayersTeamHeader {
  font-size: 1.1rem;
  font-weight: 700;
  background: v.$background-dark;
  padding: 0 0.75em;
  z-index: 2;
  position: relative;
  text-align: center;
  letter-spacing: 0.1em;
  line-height: 1.2;
  display: flex;
  align-items: center;
  height: 1.6em;
  margin: 0;
}

.activePlayersList {
  list-style: none;
  padding: 0;
  margin: 0;
  font-size: 1rem;
}

.linemateMatrixSidebarColumn {
  border: 5px solid v.$border-color-primary;
  border-radius: v.$border-radius * 2;
  outline: 5px solid color.adjust(v.$background-dark, $lightness: -2%);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  min-width: 0;
}

.linemateMatrixSidebarCard {
  background: v.$background-medium;
  border-radius: v.$border-radius;
  box-shadow: 0 2px 16px rgba(0, 0, 0, 0.08);
  padding: v.$space-sm;
  display: flex;
  flex-direction: column;
  gap: v.$space-lg;
}

.linemateMatrixStacked {
  display: flex;
  flex-direction: column;
  gap: v.$space-lg;
}

.controlsRow {
  display: flex;
  flex-direction: row;
  gap: v.$space-xl;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  min-height: 260px;
  max-height: 260px;
}

.dropdownGroup {
  display: flex;
  flex-direction: column;
  gap: v.$space-lg;
}

// Colgroup column widths for Shift Chart Table
.colPlayerName {
  width: 110px;
  height: 100%;
  min-width: 110px;
  max-width: 120px;
}
.colPlayerPosition {
  width: 40px;
  height: 100%;
  min-width: 40px;
  max-width: 60px;
}
.colPeriod1,
.colPeriod2,
.colPeriod3 {
  width: 250px;
  height: 100%;
  min-width: 120px;
}
.colOvertime {
  width: 80px;
  height: 100%;
  min-width: 80px;
}

.playPauseButton {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  background: v.$background-dark;
  border: 2px solid v.$primary-color;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.12);
  transition:
    background 0.2s,
    border-color 0.2s,
    box-shadow 0.2s;
  cursor: pointer;
  margin: 0 24px;
  padding: 0;
  &:hover,
  &:focus {
    background: v.$primary-color;
    border-color: v.$secondary-color;
    box-shadow: 0 4px 16px rgba(7, 170, 226, 0.18);
    outline: none;
    svg rect,
    svg polygon {
      filter: brightness(1.2);
    }
  }
  svg {
    display: block;
  }
}

.playbackControls {
  display: flex;
  align-items: center;
  gap: 8px;
  background: none;
  border-radius: 24px;
  padding: 4px 12px;
  box-shadow: none;
}

.skipButton {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background: v.$background-dark;
  border: 2px solid v.$primary-color;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  transition:
    background 0.2s,
    border-color 0.2s,
    box-shadow 0.2s;
  cursor: pointer;
  margin: 0 4px;
  padding: 0;
  &:hover,
  &:focus {
    background: v.$primary-color;
    border-color: v.$secondary-color;
    box-shadow: 0 4px 16px rgba(7, 170, 226, 0.14);
    outline: none;
    svg polygon,
    svg rect {
      filter: brightness(1.2);
    }
  }
  svg {
    display: block;
  }
}

.speedLabel {
  margin-left: 16px;
  margin-right: 4px;
  color: #aaa;
  font-weight: 600;
  font-size: 14px;
}

.speedSelect {
  font-weight: 600;
  font-size: 14px;
  border-radius: 4px;
  padding: 2px 8px;
  border: 1px solid #07aae2;
  background: #181818;
  color: #07aae2;
}

.activePlayersFormation {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.25em;
  margin-top: 0.5em;
}

.formationRow {
  display: flex;
  justify-content: center;
  gap: 1.2em;
  margin-bottom: 0.1em;
}

.fwdRow {
  font-weight: 700;
  font-size: 1.1em;
}
.dRow {
  font-weight: 600;
  font-size: 1em;
  margin-top: 0.1em;
}
.gRow {
  font-weight: 500;
  font-size: 0.95em;
  margin-top: 0.1em;
}

.activePlayersTeamSection {
  border: none;
  padding: 0;
  margin-bottom: 1.2em;
  background: none;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  min-width: 220px;
  max-width: 340px;
  box-shadow: none;
  position: relative;
}

.activePlayersTeamFieldset {
  border: 2.5px solid v.$primary-color;
  border-radius: 18px;
  padding: 1.2em 1.2em 1em 1.2em;
  margin: 0;
  background: v.$background-dark;
  min-width: 220px;
  max-width: 340px;
  position: relative;
}

.activePlayersTeamLegend {
  font-size: 1.1rem;
  font-weight: 700;
  color: v.$text-color-secondary;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  opacity: 0.7;
  padding: 0 0.8em;
  margin-left: 0.5em;
  background: v.$background-dark;
  line-height: 1.1;
}

// .activePlayersTeamBorderedRow, .teamBorderLine { display: none; }
