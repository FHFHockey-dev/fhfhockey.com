/* /styles/wigoCharts.module.scss */
@use "sass:color";
@use "styles/vars" as v; // Import variables from vars.scss
@use "sass:math";
@import url("https://fonts.googleapis.com/css2?family=Train+One&family=Zen+Tokyo+Zoo&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Train+One&display=swap");

/* =================== Main Dashboard Layout =================== */
.wigoDashHeader {
  margin-top: 25px;
  margin-bottom: 25px;
  display: flex;
  flex-direction: column;
  width: 100%;
}

.spanColorBlue {
  display: inline-block;
  color: v.$primary-color;
  font-family: "Train One", sans-serif;
  font-size: v.$font-size-base * 1.8;
  font-weight: 900;
  vertical-align: baseline;
}

.wigoDashboardContainer {
  @include v.component-wrapper;
  width: 90%;
  max-width: 2200px;
  min-width: 1300px;
  min-height: 140vh;
  max-height: 140vh;
  margin: v.$space-lg auto v.$space-xxl auto;
  display: flex;
  border: 10px solid v.$border-color-primary;
  border-radius: v.$border-radius * 2;
  outline: 15px solid color.adjust(v.$background-dark, $lightness: -2%);
}

.wigoDashboardContent {
  flex-grow: 1;
  background-color: color.adjust(v.$background-dark, $lightness: -2%);
  border-radius: v.$border-radius;
  overflow: hidden; // Keep hidden on the main grid container

  // --- Grid Definition ---
  display: grid;
  grid-template-columns: repeat(36, 1fr);
  grid-template-rows: repeat(44, 1fr); // 44 rows (spans grid lines 1 to 45)
  padding: v.$space-lg;
  column-gap: v.$space-xl; // Keep the horizontal gap between columns
  row-gap: v.$space-lg; // Remove the vertical gap between rows
  margin-bottom: v.$space-sm; // Keep the bottom margin
}

/* =================== Base Styles for Grid Items =================== */

// Mixin for common internal flex setup (used by charts, tables)
@mixin internal-flex-column {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  overflow: hidden; // Important: prevent internal content from breaking grid
  background-color: color.adjust(v.$background-dark, $lightness: -1%);
}

/* =================== Wrapper Column Styles =================== */
// These wrappers will now be the direct children positioned by the grid

.leftColumnWrapper,
.middleColumnWrapper,
.rightColumnWrapper {
  display: flex; // Keep as flex container
  flex-direction: column; // Keep vertical layout
  height: 100%; // Essential for percentage heights of children
  width: 100%;
  overflow: hidden; // Prevent wrapper overflow; children handle internal scroll/overflow
  outline: 10px solid color.adjust(v.$background-dark, $lightness: 3%);
  border-radius: v.$border-radius * 0.25;
  margin-top: v.$space-sm;
}

// grid areas for the *wrappers*
// DOWN / LEFT / RIGHT / DOWN
.leftColumnWrapper {
  grid-area: 4 / 1 / 45 / 8; // Rows 3-44, Cols 1-8
}

.middleColumnWrapper {
  grid-area: 4 / 8 / 45 / 23; // Rows 3-44, Cols 9-24
}

.rightColumnWrapper {
  grid-area: 4 / 23 / 45 / 37; // Rows 3-44, Cols 25-36
}

/* =================== Specific Container Styles & Grid Areas (BENTO BOX LAYOUT) =================== */

.headerRowWrapper {
  grid-area: 1 / 1 / 4 / 37; // Span the full width where the two items were
  display: flex; // Use flexbox to position children horizontally
  align-items: center; // Make children fill the height of the wrapper
  justify-content: space-between; // Space out children
  column-gap: 0; // Ensure no gap between the flex children (search bar and header)
  padding-bottom: v.$space-md;
  height: 100%;
  width: 100%;

  // Apply a border to the wrapper if desired, instead of individual items

  border-bottom: 8px double v.$primary-color;
  margin-bottom: 10px;
}

// --- Top Row Items (Still direct grid children) ---
.nameSearchBarContainer {
  // REMOVED grid-area
  background-color: color.adjust(v.$background-dark, $lightness: -1%);
  height: 100%; // Fill height of wrapper
  min-height: 45px; // Keep minimum
  overflow: visible !important; // Keep for dropdown
  display: flex; // Keep internal flex
  align-items: center;
  justify-content: space-between;
  z-index: 3; // Keep
  // border: 3px solid v.$border-color-primary; // Remove if border applied to wrapper

  // --- Flex sizing ---
  flex: 6 1 0%; // Approx original width (8 columns wide) - Grow 8, Shrink 1, Basis 0
  min-width: 0; // Prevent flex overflow issues

  > div {
    // Target inner div if needed

    width: 100%;
    height: 100%;
  }
}

.wigoHeader {
  // REMOVED grid-area
  display: flex;
  justify-content: center;
  align-items: center;
  padding: v.$space-md;
  overflow: hidden;
  white-space: nowrap;
  // border-bottom: 8px double v.$primary-color; // Remove if border applied to wrapper
  border: none; // Remove border
  height: 100%; // Fill height of wrapper

  // --- Flex sizing ---
  flex: 26 1 0%; // Approx original width (28 columns wide) - Grow 28, Shrink 1, Basis 0
  min-width: 0; // Prevent flex overflow issues

  .headerText {
    font-family: "Train One", sans-serif;
    letter-spacing: 1em;
    font-size: v.$font-size-base * 1.8;
    line-height: 1.5em;
    font-weight: 100;
  }
}

// --- Left Column Components (Children of .leftColumnWrapper) ---

.playerHeaderContainer {
  position: relative; // Keep relative for internal absolute positioning
  z-index: 1; // Keep for stacking context if needed
  padding: 0;
  overflow: hidden !important; // Prevent overflow of children
  height: 15%;
  border-bottom: 8px solid color.adjust(v.$background-dark, $lightness: 3%);
  background-color: color.adjust(v.$background-dark, $lightness: 3%);
}

.playerNameContainer {
  @include internal-flex-column; // Keep for internal structure
  padding: 0;
  overflow: hidden; // Mixin handles this, but good to be explicit
  height: 5%;
  display: flex;
  align-items: center; // Center content vertically
  justify-content: center; // Center content horizontally
  text-align: center; // Center text
  font-family: "Train One", sans-serif;
  letter-spacing: 0.5em;
  font-size: v.$font-size-small * 0.8;
  font-weight: 100;
  text-transform: uppercase;
  background-color: color.adjust(v.$background-dark, $lightness: -1%);
  border-bottom: 8px solid color.adjust(v.$background-dark, $lightness: 3%); // Optional: border for visual separation
}

.spanColorBlueName {
  display: inline-block;
  color: v.$primary-color;
}

.perGameStatsContainer {
  @include internal-flex-column; // Keep mixin for internal structure
  padding: 0 !important;
  overflow: hidden; // Mixin handles this, but good to be explicit
  height: 30%;
}

.opponentLogContainer {
  @include internal-flex-column;
  padding: 0;
  height: 30%;
  border-bottom: 8px solid color.adjust(v.$background-dark, $lightness: 3%); // Optional: border for visual separation
}

.ratingsContainer {
  @include internal-flex-column;
  height: 20%;
}

.consistencyAndCategoryWrapper {
  padding: 0;
  display: flex;
  flex-direction: row; // Explicitly row
  align-items: center; // Change this if you want them to fill height
  // align-items: stretch; // Make children fill the height of the wrapper
  justify-content: center; // Remove or adjust as needed (e.g., flex-start)
  overflow: hidden;
  height: 20%;
  border-bottom: 8px solid color.adjust(v.$background-dark, $lightness: 3%); // Optional: border for visual separation
}

.consistencyRatingContainer {
  @include internal-flex-column; // Keep for internal column layout
  padding: 0;

  // --- Flex Sizing ---
  flex: 5 1 0%; // Grow = 2, Shrink = 1, Basis = 0% (Takes 2/3rds of available width)
  min-width: 0; // Prevent flexbox overflow issues

  // --- Internal styles for Consistency Chart ---
  .chartContainer {
    display: grid;
    grid-template-rows: auto 1fr;
    height: 100%;
    width: 100%;
    overflow: hidden;
  }
  .chartTitle {
    background-color: color.adjust(v.$primary-color, $lightness: -25%);
    padding: 6px 0;
    display: flex;
    justify-content: center;
    align-items: center;
    border-bottom: 2px solid color.adjust(v.$background-light, $lightness: -4%);
    text-transform: uppercase;
    h3 {
      margin: 0;
      font-size: 12px;
      font-weight: 600;
      letter-spacing: 12px;
      font-family: "Lucida Sans", "Lucida Grande", sans-serif;
      color: v.$text-color-primary;
    }
  }
  .consistencyContent {
    display: flex;
    height: 100%;
    width: 100%;
    padding: v.$space-sm;
    box-sizing: border-box;
    gap: v.$space-sm;
    overflow: hidden;
  }
  .consistencyChartArea {
    flex: 1 1 50%;
    position: relative;
    min-width: 80px;
    padding: v.$space-sm;
  }
  .consistencyListArea {
    flex: 1 1 30%;
    overflow-y: auto;
    font-size: 12px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: stretch;
    ul {
      list-style: none;
      padding: 0;
      margin: 0;
      height: 100%;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: flex-start;
    }
  }
  .consistencyItem {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 2px 0;
    border-bottom: 1px solid #3a3a3a;
    &:last-child {
      border-bottom: none;
    }
  }
  .consistencyColorSwatch {
    display: inline-block;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    margin-right: 8px;
    flex-shrink: 0;
    background-color: color.adjust(v.$background-dark, $lightness: -1%);
    border: 1px solid #777;
  }
  .consistencyLabel {
    color: #ccc;
    margin-right: 10px;
    white-space: nowrap;
    width: 50%;
    text-align: left;
  }

  .consistencyValue {
    color: #fff;
    font-weight: bold;
    text-align: right;
    width: 50%;
  }
  .consistencyCount {
    color: #888;
    font-size: 10px;
    margin-left: 5px;
    white-space: nowrap;
    width: 50%;
    text-align: right;
  }
  .chartLoadingPlaceholder,
  .chartErrorPlaceholder {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100%;
    width: 100%;
    color: #aaa;
    font-size: 12px;
    text-align: center;
    padding: 10px;
    box-sizing: border-box;
  }
  .chartErrorPlaceholder {
    color: #ff6b6b;
  }
  // --- End Consistency Chart Internal Styles ---
}

// --- Middle Column Components (Children of .middleColumnWrapper) ---
.percentileChartContainer {
  // Renamed from Category Coverage based on component name
  @include internal-flex-column; // Keep for internal column layout
  padding: 0;
  min-height: 200px; // Keep min-height

  // --- Flex Sizing ---
  flex: 3 1 0%; // Grow = 1, Shrink = 1, Basis = 0% (Takes 1/3rd of available width)
  min-width: 0; // Prevent flexbox overflow issues
  border-left: 8px solid color.adjust(v.$background-dark, $lightness: 3%); // Optional: border for visual separation

  .chartTitle {
    background-color: color.adjust(v.$primary-color, $lightness: -25%);
    padding: 6px 0;
    display: flex;
    justify-content: center;
    align-items: center;
    border-bottom: 2px solid color.adjust(v.$background-light, $lightness: -4%);
    text-transform: uppercase;
    h3 {
      margin: 0;
      font-size: 12px;
      font-weight: 600;
      letter-spacing: 12px;
      font-family: "Lucida Sans", "Lucida Grande", sans-serif;
      color: v.$text-color-primary;
    }
  }
}

.toiChartContainer {
  @include internal-flex-column;
  padding: 0;
  height: 20%;
  border-bottom: 8px solid color.adjust(v.$background-dark, $lightness: 3%); // Optional: border for visual separation
}

.ppgChartContainer {
  @include internal-flex-column;
  padding: 0;
  height: 20%;

  border-bottom: 8px solid color.adjust(v.$background-dark, $lightness: 3%); // Optional: border for visual separation
}

.gameScoreContainer {
  @include internal-flex-column;
  padding: 0;
  height: 20%;

  border-bottom: 8px solid color.adjust(v.$background-dark, $lightness: 3%); // Optional: border for visual separation
}

.rateStatBarPercentilesContainer {
  @include internal-flex-column;
  margin-top: auto !important;
  padding: 0;
  height: 20%;
}

.rateStatBarPercentilesComponent {
  @include internal-flex-column;
  padding: 0;
  flex: 1 1 auto; // Allow growing and shrinking
  height: 100%;
  min-height: 250px;
  max-height: 250px;
}

// --- Right Column Components (Children of .rightColumnWrapper) ---
.timeframeComparisonWrapper {
  @include internal-flex-column; // Use mixin if appropriate, or custom styles

  align-items: center;
  justify-content: center;
  > div {
    // Target the TimeframeComparison component inside
    width: 100%;
  }
}

.combinedStatsTableContainer {
  @include internal-flex-column;
  padding: 0;
  overflow: hidden; // Mixin handles this
  flex: 1 1 auto; // Allow table container to grow and shrink
  height: 100%;
  background-color: color.adjust(v.$background-dark, $lightness: -1%);
}

/* =================== VERTICAL Table Styling =================== */
.statsTableContainer {
  height: 100%;
  width: 100%;
  overflow-y: auto; // Enable vertical scroll if content overflows height

  &::-webkit-scrollbar {
    height: 6px;
    width: 6px;
  }
  &::-webkit-scrollbar-thumb {
    background-color: v.$primary-color;
    border-radius: 3px;
  }
  &::-webkit-scrollbar-track {
    background-color: v.$background-medium;
  }
  scrollbar-width: thin;
  scrollbar-color: v.$primary-color v.$background-medium;
}

.statsTable {
  border-collapse: separate;
  border-spacing: 0;
  width: 100%;
  height: 100%;
  table-layout: fixed;

  // --- Variables ---
  $highlight-border-width: 3px; // Use 2px for better visibility with radius
  $left-highlight-color: #07aae2; // Blue
  $right-highlight-color: #ffcd56; // Yellow
  $default-border-color: v.$border-color-secondary;
  $corner-radius: v.$border-radius-sm; // e.g., 4px or 6px

  th,
  td {
    padding: 0 v.$space-sm * 0.5;
    font-size: v.$font-size-small;
    height: 34px;
    font-weight: 100;
    font-family: "roboto condensed", sans-serif;
    vertical-align: middle;
    white-space: nowrap;
    text-align: right;
    overflow: hidden;
    text-overflow: ellipsis;
    // border: 1px solid $default-border-color; // Default thin borders
    position: relative; // Base for z-index
    opacity: 1;
  }

  td {
    height: 28px;
  }

  // --- Base Header Styles ---
  th {
    background-color: color.adjust(
      v.$background-dark,
      $lightness: -5%
    ); // Optional: darken for visual separation  box-sizing: border-box;
    color: v.$text-color-secondary;
    font-weight: 600;
    font-size: v.$font-size-small * 0.9;
    border-bottom: 3px solid v.$primary-color; // Default thick primary bottom border
    position: sticky;
    top: 0;
    z-index: 1; // Headers above base data cells & highlight borders
  }

  // --- Sticky First Column Styles ---
  th:first-child,
  td:first-child {
    width: 100px;
    min-width: 75px;
    text-align: left;
    font-weight: 600;
    color: v.$text-color-primary;
    position: sticky;
    left: 0;
    border-right: 2px solid v.$border-color; // Specific thick right border
    padding-left: v.$space-sm;
  }
  th:first-child {
    z-index: 2; // Top-left sticky header highest
  }

  // --- Last Column (DIFF) Styles ---
  th:last-child,
  td:last-child {
    width: 65px;
    min-width: 65px;
    font-weight: bold;
  }

  // --- DIFF Cell Content Styles ---
  .diffCell span {
    display: block;
    font-weight: bold;
  }
  .diffPositive {
    color: rgb(18, 193, 126);
  }
  .diffNegative {
    color: rgb(240, 85, 118);
  }
  .diffNeutral {
    color: #ccc;
  }

  // --- Highlight Styles ---

  // Base highlight (L/R Borders + Background + Reset T/B)
  th.highlightedLeft,
  td.highlightedLeft {
    border-left: $highlight-border-width solid $left-highlight-color;
    border-right: $highlight-border-width solid $left-highlight-color;
    // Reset T/B borders to default before specific overrides
    border-bottom: 0px solid $default-border-color;
    border-top: 0px solid $default-border-color;
    background-color: rgba(
      color.adjust($left-highlight-color, $lightness: -5%),
      0.2
    );
  }

  th.highlightedRight,
  td.highlightedRight {
    border-left: $highlight-border-width solid $right-highlight-color;
    border-right: $highlight-border-width solid $right-highlight-color;
    // Reset T/B borders to default before specific overrides
    border-bottom: 0px solid $default-border-color;
    border-top: 0px solid $default-border-color;
    background-color: rgba(
      color.adjust($right-highlight-color, $lightness: -5%),
      0.25
    );
    z-index: 0; // Ensure highlights are below sticky elements
  }

  // Top Border Override (Apply ONLY to highlighted HEADER cells)
  th.highlightedLeft {
    border-top: $highlight-border-width solid $left-highlight-color;
    // Override the thick primary bottom border from base 'th' rule
    border-bottom: 3px solid v.$primary-color !important; // Use !important if needed, or ensure higher specificity
    z-index: 5; // Or higher if needed, ensure it's >= base th
    background-color: color.adjust($left-highlight-color, $lightness: -30%);
    color: v.$color-white;
  }
  th.highlightedRight {
    border-top: $highlight-border-width solid $right-highlight-color;
    // Override the thick primary bottom border from base 'th' rule
    border-bottom: 3px solid v.$primary-color !important; // Use !important if needed, or ensure higher specificity
    z-index: 5; // Or higher if needed, ensure it's >= base th
    background-color: color.adjust($right-highlight-color, $lightness: -47%);
    color: v.$color-white;
  }

  // Bottom Border Override (Apply ONLY to highlighted cells in the LAST ROW - Requires isLastRow logic in React)
  // These rules rely on the td having the highlight class already
  td.highlightCornerBottomLeft, // Applied by React logic using isLastRow
  td.highlightCornerBottomRight {
    // Applied by React logic using isLastRow
    border-bottom-width: $highlight-border-width;
    // Color will be inherited from .highlightedLeft or .highlightedRight border rules
  }
  td.highlightCornerBottomLeft {
    border-bottom-color: $left-highlight-color;
  }
  td.highlightCornerBottomRight {
    border-bottom-color: $right-highlight-color;
  }

  // --- Corner Radius Styles ---
  // These rely on React adding the specific corner classes
  .highlightCornerTopLeft {
    border-top-left-radius: $corner-radius;
    border-top-right-radius: $corner-radius;
  }
  .highlightCornerTopRight {
    border-top-right-radius: $corner-radius;
    border-top-left-radius: $corner-radius;
  }
  .highlightCornerBottomLeft {
    border-bottom-left-radius: $corner-radius;
    border-bottom-right-radius: $corner-radius;
  }
  .highlightCornerBottomRight {
    border-bottom-right-radius: $corner-radius;
    border-bottom-left-radius: $corner-radius;
  }

  // --- Adjacent Column Cleanup ---
  // Prevent double borders between adjacent highlighted columns
  th.highlightedLeft + th.highlightedRight,
  td.highlightedLeft + td.highlightedRight,
  th.highlightedRight + th.highlightedLeft,
  td.highlightedRight + td.highlightedLeft {
    border-left-width: 0;
  }

  tr {
    height: 28px;

    // --- Other Styles within .statsTable ---
    // (Row striping, hover, stat label cell, expand button, chart row, etc.)
    &:nth-child(even) {
      background-color: color.adjust(v.$background-light, $lightness: -1%);
    }

    &:nth-child(odd) {
      background-color: color.adjust(v.$background-light, $lightness: -3%);
    }
  }

  tr:hover > td:first-child {
    border-top: 1px solid v.$focus-color;
    border-bottom: 1px solid v.$focus-color;
    background-color: color.change(
      color.adjust(v.$focus-color, $lightness: -5%),
      $alpha: 0.2
    );
  }
  tr:hover > td:not(:first-child) {
    background-color: color.change(
      color.adjust(v.$focus-color, $lightness: -5%),
      $alpha: 0.2
    );
    border-top: 1px solid v.$focus-color;
    border-bottom: 1px solid v.$focus-color;
    cursor: default;
    color: v.$focus-color;
    font-weight: 900;
  }
  .statLabelCell {
    vertical-align: middle;
  }
  .statLabelContent {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: v.$space-sm;
    width: 100%;
  }
  button.expandButton {
    background: v.$border-color-primary;
    color: v.$primary-color;
    border: 2px solid v.$border-color-secondary;
    border-radius: 4px; // Keep button radius
    cursor: pointer;
    font-size: 12px;
    font-weight: 900;
    line-height: 1.2;
    padding: 1px 4px;
    min-width: 21px;
    flex-shrink: 0;
    margin-right: 5px;
    &:hover {
      background: #555;
    }
    &[aria-expanded="true"] {
      background-color: v.$primary-color;
      border-color: color.adjust(v.$primary-color, $lightness: -15%);
      color: white;
      border-radius: 4px; // Keep button radius
      cursor: pointer;
      font-size: 12px;
      font-weight: 900;
      line-height: 1.2;
      padding: 1px 4px;
      min-width: 21px;
      flex-shrink: 0;
      margin-right: 5px;
    }
    // Removed misplaced z-index rules from here
  }

  // --- Chart Row Styling ---
  .chartRowExpanded {
    td {
      // Target the single cell spanning columns in the chart row
      padding: v.$space-sm v.$space-sm; // Add padding around the chart
      background-color: color.adjust(v.$background-dark, $lightness: -1%);

      border-top: 8px solid color.adjust(v.$background-dark, $lightness: 3%) !important;
      border-bottom: 8px solid color.adjust(v.$background-dark, $lightness: 3%) !important;
      // Remove sticky positioning if inherited
      border-right: none; // Remove right border
      position: static;
      left: auto;
      text-align: left; // Reset text align if needed

      &:hover {
        background-color: color.adjust(
          v.$background-dark,
          $lightness: -1%
        ) !important;
        cursor: default; // Prevent pointer on hover
        // repeat the border styles to ensure the row hover effect is not applied
        border-top: 8px solid color.adjust(v.$background-dark, $lightness: 3%) !important;
        border-bottom: 8px solid
          color.adjust(v.$background-dark, $lightness: 3%) !important;
      }
    }
  }

  .chartWrapper {
    // Wrapper div inside the chart row's cell
    width: 100%;
    height: auto; // Let chart determine height
    h4 {
      // Style the chart title added in StatsTable
      margin-top: 0;
      margin-bottom: v.$space-sm;
      text-align: center;
      color: #ccc;
      font-size: v.$font-size-base * 0.9;
      font-weight: 600;
      letter-spacing: 1px;
      text-transform: uppercase;
    }
  }
}

.gameLogChartContainer {
  .averageToggleButtons {
    display: flex;
    width: 100%;
    margin: 0 auto;
    flex-wrap: wrap;
    justify-content: center;
    gap: 6px; // Slightly smaller gap
    margin-bottom: v.$space-md; // Reduced margin
    margin-top: v.$space-sm;
  }
  .avgButton {
    background-color: color.adjust(v.$background-dark, $lightness: -5%);
    border: 1px solid v.$border-color-secondary;
    color: v.$text-color-button;
    padding: 4px 6px; // Smaller padding
    border-radius: v.$border-radius-sm;
    cursor: pointer;
    font-family: v.$font-family-primary;
    font-size: v.$font-size-small * 0.85;
    font-weight: 100;
    letter-spacing: 0.5px; // Smaller font
    transition:
      background-color 0.2s ease,
      border-color 0.2s ease,
      color 0.2s ease;
    &:hover {
      background-color: color.adjust(v.$background-dark, $lightness: -100%);
      border-color: v.$focus-color;
    }
    &.active {
      color: white;
      font-weight: bold;
      outline: 1px solid white;
      outline-offset: 1px;
    }
  }
}
.chartStatus {
  padding: v.$space-md; // Reduced padding
  text-align: center;
  color: v.$text-color-secondary;
  font-style: italic;
  background-color: inherit; // Inherit from parent td
  min-height: 100px; // Give it some minimum height
  display: flex;
  align-items: center;
  justify-content: center;
}
.chartTooltip {
  background-color: rgba(v.$background-dark, 0.95);
  border: 1px solid v.$border-color-primary;
  padding: v.$space-sm;
  border-radius: v.$border-radius-sm;
  color: v.$text-color-primary;
  font-size: v.$font-size-small;
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);
  p {
    margin: 4px 0;
  }
}
/* --- End GameLogChart Internal Styles --- */

/* =================== Player Header Internal Styles =================== */
.playerHeadshot {
  width: 100%;
  height: 100%;
  position: relative;
  background-color: var(--primary-color);
  border-radius: v.$border-radius; // Round the corners
}
.headshotContainer {
  position: relative; // For absolute positioning of children
  width: 100%;
  height: 100%;
  display: flex;
  border: 4px solid color.adjust(v.$background-dark, $lightness: 15%);
  border-radius: v.$border-radius; // Round the corners
  overflow: hidden; // Prevent overflow of children
  background-color: none; // Allow background to show through if needed
}

.teamLogo {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  overflow: visible;
  justify-content: center;
  transform: translateX(10%);
  opacity: 0.25; // Make it semi-transparent
  img {
    display: block;
    max-width: 100%;
    max-height: 100%;
    width: auto;
    height: auto;
    object-fit: contain;
    filter: drop-shadow(3px 3px 0 var(--secondary-color))
      drop-shadow(-3px -3px 0 var(--secondary-color))
      drop-shadow(3px -3px 0 var(--secondary-color))
      drop-shadow(-3px 3px 0 var(--secondary-color));
  }
  span {
    overflow: visible !important;
  }
  p {
    color: #ccc;
    font-size: 14px;
    text-align: center;
  }
}
.headshot {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 2; // Above logo
  display: flex;
  align-items: center;
  justify-content: center;
  span {
    overflow: visible !important;
    width: 100% !important;
    height: 100% !important;
  }
  img {
    height: 90%;
    width: 90%;
  }
}
.headshotImage {
  display: block;
  width: 100%;
  height: 100%;
  transform: translateX(-20%);
  object-fit: cover; // Cover the area, potentially cropping
  // filter: drop-shadow(3px 3px 0 var(--primary-color))
  //   drop-shadow(-3px 3px 0 var(--primary-color))
  //   drop-shadow(3px -3px 0 var(--primary-color))
  //   drop-shadow(-3px -3px 0 var(--primary-color))
  //   drop-shadow(3px 3px 0 var(--secondary-color))
  //   drop-shadow(-3px -3px 0 var(--secondary-color))
  //   drop-shadow(3px -3px 0 var(--secondary-color))
  //   drop-shadow(-3px 3px 0 var(--secondary-color)) drop-shadow(3px 3px 0 white)
  //   drop-shadow(-3px -3px 0 white) drop-shadow(3px -3px 0 white)
  //   drop-shadow(-3px 3px 0 white);
  filter: drop-shadow(0px 4px 8px white);
}
img[alt*="Placeholder headshot"].headshotImage {
  object-fit: contain;
  opacity: 0.4;
  filter: none;
}

/* --- End Player Header Internal Styles --- */

.chartRowExpanded {
  padding: v.$space-md;
  border-top: 2px solid v.$border-color-primary;
  background-color: color.adjust(v.$background-dark, $lightness: -1%);
  margin-top: v.$space-xs;
  width: 100%;
  box-sizing: border-box;
}
/* --- End Transposed Table Styling --- */

/* =================== GameLogChart Internal Styles =================== */

.chartStatus {
  padding: v.$space-lg;
  text-align: center;
  color: v.$text-color-secondary;
  font-style: italic;
  background-color: inherit;
}
.chartTooltip {
  background-color: rgba(v.$background-dark, 0.95);
  border: 1px solid v.$border-color-primary;
  padding: v.$space-sm;
  border-radius: v.$border-radius-sm;
  color: v.$text-color-primary;
  font-size: v.$font-size-small;
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);
  p {
    margin: 4px 0;
  }
}
/* --- End GameLogChart Internal Styles --- */

/* =================== Chart Container Styling (Generic) =================== */
.chartContainer {
  height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}
.chartHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 6px 10px;
  background-color: color.adjust(v.$background-dark, $lightness: -5%);
  flex-shrink: 0;
  border-bottom: 3px solid color.adjust(v.$background-dark, $lightness: 3%);
  h3 {
    margin: 0;
    font-size: 12px;
    font-weight: 700;
    color: #ccc;
    padding: 3px 0 3.5px 0;
    text-transform: uppercase;
    letter-spacing: 2px;
  }
  .toggleButtons button {
    padding: 3px 5px;
    font-size: 10px;
    cursor: pointer;
    color: v.$text-color-secondary;
    background-color: color.adjust(v.$background-dark, $lightness: -10%);
    border: 1px solid v.$border-color;
    border-radius: v.$border-radius-sm;
    margin-left: 5px;
    transition:
      background-color 0.2s ease,
      border-color 0.2s ease;
    &:first-child {
      margin-left: 0;
    }
    &:hover:not(:disabled) {
      background-color: #444;
      border-color: #777;
    }
    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
  }
}
.chartCanvasContainer {
  position: relative;
  width: 100%;
  flex-grow: 1;
  overflow: hidden;
  padding: v.$space-sm;
  box-sizing: border-box;
}

.chartLoadingPlaceholder {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  min-height: 100px;
  color: v.$text-color-secondary;
  font-size: v.$font-size-small;
  flex-grow: 1;
  background-color: inherit;
}
/* --- End Generic Chart Styling --- */

/* =================== Rate Stat Percentiles Component Styles =================== */
.rateStatPercentilesComponent {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
  overflow: hidden;
  background-color: color.adjust(v.$background-dark, $lightness: -1%);
}
.mainContentWrapper {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  width: 100%;
  overflow: hidden;
}

.percentileFiltersContainer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  flex-direction: column;
  flex-shrink: 0;
  flex-basis: 50px;
  box-sizing: border-box;
  align-items: stretch;
  height: 100%;
  background-color: color.adjust(v.$background-dark, $lightness: -5%);
  border-bottom: 3px solid color.adjust(v.$background-dark, $lightness: 3%);
}

.filtersTitle {
  margin: 0;
  font-size: 12px;
  font-weight: 700;
  color: #ccc;
  padding: 3px 0 3.5px 0;
  text-transform: uppercase;
  letter-spacing: 2px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 6px 10px;
  background-color: color.adjust(v.$background-dark, $lightness: -5%);
  flex-shrink: 0;
  border-bottom: 3px solid color.adjust(v.$background-dark, $lightness: -1%);
}

.filterControlsWrapper {
  display: flex;
  flex-direction: row;
  width: 100%;
  align-items: flex-start;
  overflow: hidden;
}

.strengthSelector {
  display: flex;
  flex-direction: row;
  flex-grow: 1;
  width: 70%;
  align-items: center;
  justify-content: space-between;
  gap: v.$space-xs;
  min-width: 0;
  padding: v.$space-xs v.$space-md;
  height: 100%;
  button {
    @include v.button-style;
    padding: 3px 5px;
    font-size: 10px;
    cursor: pointer;
    color: v.$text-color-secondary;
    background-color: color.adjust(v.$background-dark, $lightness: -10%);
    border: 1px solid v.$border-color;
    color: v.$text-color-secondary;
    width: 100%;
    text-align: center;
    transition:
      background-color 0.2s ease,
      border-color 0.2s ease;

    &.active {
      background-color: v.$primary-color;
      color: v.$text-color-primary;
      border-color: v.$primary-color;
      font-weight: bold;
    }
    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
    }
  }
}
.gpSliderContainer {
  display: flex;
  flex-direction: row;
  align-items: center;
  color: v.$text-color-secondary;
  font-size: v.$font-size-small;
  height: 100%;
  width: 100%;
  padding: v.$space-sm;
  label {
    white-space: nowrap;
    font-size: v.$font-size-small;
    font-family: v.$font-family-primary;
    font-weight: bold;
    text-align: center;
    .minGpValue {
      color: v.$primary-color;
      padding-left: v.$space-xs;
    }
  }
  input[type="range"] {
    width: 100%;
    height: auto;
  }
  .gpSlider {
    appearance: slider-horizontal;
    -webkit-appearance: slider-horizontal;
    writing-mode: bt-lr;
    width: 8px;
    flex-grow: 1;
    cursor: pointer;
    accent-color: v.$primary-color;
    margin: 0;
    padding: 0;
    order: 1;
    &:disabled {
      cursor: not-allowed;
      opacity: 0.5;
    }
    &::-webkit-slider-runnable-track {
      background: color.adjust(v.$background-medium, $lightness: 10%);
      border-radius: 10px;
      height: 100%;
      outline: 1px solid v.$border-color;
    }
    &::-moz-range-track {
      background: v.$background-medium;
      border-radius: 3px;
      height: 100%;
      outline: 1px solid v.$border-color;
    }
    &::-webkit-slider-thumb {
      appearance: none;
      -webkit-appearance: none;
      height: 16px;
      width: 16px;
      background: v.$primary-color;
      border-radius: 50%;
      cursor: pointer;
      margin-top: 0px;
    }
    &::-moz-range-thumb {
      height: 16px;
      width: 16px;
      background: v.$primary-color;
      border-radius: 50%;
      border: none;
      cursor: pointer;
    }
  }
  .gpSliderMaxLabel,
  .gpSliderMinLabel {
    font-size: v.$font-size-small;
    color: v.$primary-color;
    width: 20%;
    text-align: center;
    order: 0;
  }
  .gpSliderMaxLabel {
    order: 2;
  }
  .gpSliderMinLabel {
    order: 0;
  }
}
.thresholdMessagesContainer {
  margin-top: auto;
  flex-shrink: 0;
  width: 100%;
  display: flex;
  flex-direction: column;
  gap: v.$space-xs;
}
.thresholdMessage {
  color: v.$warning-color;
  font-size: v.$font-size-small * 0.9;
  padding: v.$space-xs;
  background-color: rgba(v.$warning-color, 0.1);
  border: 1px solid rgba(v.$warning-color, 0.3);
  border-radius: v.$border-radius-sm;
  text-align: left;
  width: 100%;
}
.chartAndRanksArea {
  padding: v.$space-sm;
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  width: 100%;
  min-width: 0;
  height: 100%;
  overflow: hidden;
}
.percentileChartsContainer {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  width: 100%;
  height: 100%;
  overflow: hidden;
  box-sizing: border-box;
  position: relative;
  overflow: hidden;
  box-sizing: border-box;
  > canvas,
  > div {
    width: 100% !important;
    height: 100% !important;
    position: relative;
  }
}
/* --- End Rate Stat Percentiles Styles --- */
